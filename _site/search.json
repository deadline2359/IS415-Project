[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Group 9",
    "section": "",
    "text": "Paper\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 16, 2023\n\n\nGroup 9\n\n\n\n\n\n\n  \n\n\n\n\nAccessibility\n\n\n\n\n\n\n\n\n\n\n\n\nApr 15, 2023\n\n\nGroup 9\n\n\n\n\n\n\n  \n\n\n\n\nData Cleaning and Visualisation\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 5, 2023\n\n\nGroup 9\n\n\n\n\n\n\n  \n\n\n\n\nProposal\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 2023\n\n\nGroup 9\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/data_cleaning/index.html",
    "href": "posts/data_cleaning/index.html",
    "title": "Data Cleaning and Visualisation",
    "section": "",
    "text": "pacman::p_load(readr, sf, tmap, spatstat, sfdep, tidyverse, maptools, raster, SpatialAcc, ggstatsplot, reshape2, rgdal, spNetwork)"
  },
  {
    "objectID": "posts/data_cleaning/index.html#aspatial-data",
    "href": "posts/data_cleaning/index.html#aspatial-data",
    "title": "Data Cleaning and Visualisation",
    "section": "Aspatial Data",
    "text": "Aspatial Data\n\nGeneral Practitioner Clinics\n\nCodeData\n\n\n\ngp_data <- read_csv(\"data/aspatial/gp_data_geocoded.csv\")[,-1]\n\nRows: 1221 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): clinic, postal_code\ndbl (5): index, X, Y, Lat, Long\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nhead(gp_data, 5)\n\n# A tibble: 5 × 6\n  clinic                 postal_code      X      Y   Lat  Long\n  <chr>                  <chr>        <dbl>  <dbl> <dbl> <dbl>\n1 RafflesMedical         159953      24849. 30114.  1.29  104.\n2 Shenton Medical Group  119963      24433. 28496.  1.27  104.\n3 Town Hall Clinic       119967      24375. 28917.  1.28  104.\n4 Chuah Clinic & Surgery 380113      33881. 33643.  1.32  104.\n5 ECM Clinic & Surgery   387604      33518. 33021.  1.31  104.\n\n\n\n\n\n\n\nHospitals\n\nCodeData\n\n\n\nhospital_data <- read_csv(\"data/aspatial/hospital_data_geocoded.csv\")\n\nRows: 27 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): HOSPITAL_NAME, PRIVATE, TYPE, MANAGED_BY, ADDRESS, NUM_OF_BEDS\ndbl (5): POSTAL_CODE, X, Y, Lat, Long\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nhead(hospital_data, 5)\n\n# A tibble: 5 × 11\n  HOSPITAL_N…¹ PRIVATE TYPE  MANAG…² ADDRESS POSTA…³ NUM_O…⁴      X      Y   Lat\n  <chr>        <chr>   <chr> <chr>   <chr>     <dbl> <chr>    <dbl>  <dbl> <dbl>\n1 ALEXANDRA H… Y       GENE… <NA>    ALEXAN…  159964 176     24230. 30060.  1.29\n2 BRIGHT VISI… N       COMM… SINGHE… 5 LORO…  547530 317     32976. 39338.  1.37\n3 CHANGI GENE… N       GENE… SINGHE… 2 SIME…  529889 1,000   40784. 35942.  1.34\n4 CONCORD INT… Y       SPEC… <NA>    19 Ada…  289891 34      25774. 34337.  1.33\n5 FARRER PARK… Y       GENE… <NA>    1 Farr…  217562 121     30284. 32783.  1.31\n# … with 1 more variable: Long <dbl>, and abbreviated variable names\n#   ¹​HOSPITAL_NAME, ²​MANAGED_BY, ³​POSTAL_CODE, ⁴​NUM_OF_BEDS\n\n\n\n\n\n\n\nPolyclinics\n\nCodeData\n\n\n\npoly_data <- read_csv(\"data/aspatial/polyclinic_data_geocoded.csv\")\n\nRows: 20 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): POLYCLINIC, MANAGED_BY, ADDRESS\ndbl (5): POSTAL_CODE, X, Y, Lat, Long\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nhead(poly_data, 5)\n\n# A tibble: 5 × 8\n  POLYCLINIC               MANAGED_BY ADDRESS  POSTA…¹      X      Y   Lat  Long\n  <chr>                    <chr>      <chr>      <dbl>  <dbl>  <dbl> <dbl> <dbl>\n1 ANG MO KIO POLYCLINIC    NHG        21 ANG …  569666 29375. 39591.  1.37  104.\n2 BEDOK POLYCLINIC         Singhealth HEARTBE…  469662 38997. 34344.  1.33  104.\n3 BUKIT BATOK POLYCLINIC   NUHS       50 BUKI…  659164 18485. 37125.  1.35  104.\n4 BUKIT MERAH POLYCLINIC   Singhealth 163 BUK…  150163 26192. 29566.  1.28  104.\n5 CHOA CHU KANG POLYCLINIC NUHS       2 TECK …  688846 18814. 40478.  1.38  104.\n# … with abbreviated variable name ¹​POSTAL_CODE\n\n\n\n\n\n\n\nNursing Homes\n\nCodeData\n\n\n\nnursing_data <- read_csv(\"data/aspatial/nursing_home_data_geocoded.csv\")\n\nRows: 76 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): NURSING_HOME_NAME, ADDRESS\ndbl (5): POSTAL_CODE, X, Y, Lat, Long\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nhead(nursing_data, 5)\n\n# A tibble: 5 × 7\n  NURSING_HOME_NAME             ADDRESS        POSTA…¹      X      Y   Lat  Long\n  <chr>                         <chr>            <dbl>  <dbl>  <dbl> <dbl> <dbl>\n1 ALL SAINTS HOME (HOUGANG)     5 Poh Huat Ro…  546703 33636. 38608.  1.37  104.\n2 ALL SAINTS HOME (JURONG EAST) 20 JURONG EAS…  609792 17702. 35990.  1.34  104.\n3 ALL SAINTS HOME (TAMPINES)    11 TAMPINES S…  529123 41443. 38141.  1.36  104.\n4 ALL SAINTS HOME (YISHUN)      551 YISHUN RI…  768681 27662. 46348.  1.44  104.\n5 APEX HARMONY LODGE            10 PASIR RIS …  518240 42573. 39170.  1.37  104.\n# … with abbreviated variable name ¹​POSTAL_CODE\n\n\n\n\n\n\n\nPrimary Care Networks\n\nCodeData\n\n\n\npcn_data <- read_csv(\"data/aspatial/PCN Clinic Listing (by PCN) With Postal Code.csv\")\n\nNew names:\nRows: 828 Columns: 19\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(13): PCN, Clinic Name, Address, Operating Hours (Please call the clinic... dbl\n(6): S/N, results.POSTAL...15, results.X, results.Y, results.LATITUDE, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `results.POSTAL` -> `results.POSTAL...9`\n• `results.POSTAL` -> `results.POSTAL...15`\n\n\n\n\n\nhead(pcn_data, 5)\n\n# A tibble: 5 × 19\n  `S/N` PCN      Clini…¹ Address Opera…² Conta…³ Addre…⁴ Posta…⁵ resul…⁶ resul…⁷\n  <dbl> <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  \n1     1 ASSURAN… 57 MED… BLK 32… \"Monda… 651892… BLK 32… 390032  390032  32 CAS…\n2     2 ASSURAN… ACUMED… 301 BO… \"Monda… 65,159… 301 BO… 649846  649846  BOON L…\n3     3 ASSURAN… ACUMED… BLK 21… \"Monda… 64,438… BLK 21… 460214  460214  BEDOK …\n4     4 ASSURAN… ACUMED… 1 JOO … \"Monda… 68,615… 1 JOO … 629117  629117  DBS NT…\n5     5 ASSURAN… ACUMED… 1 JURO… \"Monda… 67,923… 1 JURO… 648886  648886  OCBC J…\n# … with 9 more variables: results.BLK_NO <chr>, results.ROAD_NAME <chr>,\n#   results.BUILDING <chr>, results.ADDRESS <chr>, results.POSTAL...15 <dbl>,\n#   results.X <dbl>, results.Y <dbl>, results.LATITUDE <dbl>,\n#   results.LONGITUDE <dbl>, and abbreviated variable names ¹​`Clinic Name`,\n#   ²​`Operating Hours (Please call the clinic before visiting)`, ³​`Contact No`,\n#   ⁴​`Address Check`, ⁵​`Postal Code`, ⁶​results.POSTAL...9, ⁷​results.SEARCHVAL\n\n\n\n\n\n\n\nResident Population by Planning Area/Subzone, Age Group and Sex\nOnly total population, not separated by genders\n\nCodeData\n\n\n\npop_data <- read_csv(\"data/aspatial/Resident Population 2015.csv\", skip=11)[1:379,1:58]\n\nNew names:\nRows: 401 Columns: 59\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(58): ...1, Total...2, 0 - 4...3, 5 - 9...4, 10 - 14...5, 15 - 19...6, 2... lgl\n(1): ...59\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n• `Total` -> `Total...2`\n• `0 - 4` -> `0 - 4...3`\n• `5 - 9` -> `5 - 9...4`\n• `10 - 14` -> `10 - 14...5`\n• `15 - 19` -> `15 - 19...6`\n• `20 - 24` -> `20 - 24...7`\n• `25 - 29` -> `25 - 29...8`\n• `30 - 34` -> `30 - 34...9`\n• `35 - 39` -> `35 - 39...10`\n• `40 - 44` -> `40 - 44...11`\n• `45 - 49` -> `45 - 49...12`\n• `50 - 54` -> `50 - 54...13`\n• `55 - 59` -> `55 - 59...14`\n• `60 - 64` -> `60 - 64...15`\n• `65 - 69` -> `65 - 69...16`\n• `70 - 74` -> `70 - 74...17`\n• `75 - 79` -> `75 - 79...18`\n• `80 - 84` -> `80 - 84...19`\n• `85 & Over` -> `85 & Over...20`\n• `Total` -> `Total...21`\n• `0 - 4` -> `0 - 4...22`\n• `5 - 9` -> `5 - 9...23`\n• `10 - 14` -> `10 - 14...24`\n• `15 - 19` -> `15 - 19...25`\n• `20 - 24` -> `20 - 24...26`\n• `25 - 29` -> `25 - 29...27`\n• `30 - 34` -> `30 - 34...28`\n• `35 - 39` -> `35 - 39...29`\n• `40 - 44` -> `40 - 44...30`\n• `45 - 49` -> `45 - 49...31`\n• `50 - 54` -> `50 - 54...32`\n• `55 - 59` -> `55 - 59...33`\n• `60 - 64` -> `60 - 64...34`\n• `65 - 69` -> `65 - 69...35`\n• `70 - 74` -> `70 - 74...36`\n• `75 - 79` -> `75 - 79...37`\n• `80 - 84` -> `80 - 84...38`\n• `85 & Over` -> `85 & Over...39`\n• `Total` -> `Total...40`\n• `0 - 4` -> `0 - 4...41`\n• `5 - 9` -> `5 - 9...42`\n• `10 - 14` -> `10 - 14...43`\n• `15 - 19` -> `15 - 19...44`\n• `20 - 24` -> `20 - 24...45`\n• `25 - 29` -> `25 - 29...46`\n• `30 - 34` -> `30 - 34...47`\n• `35 - 39` -> `35 - 39...48`\n• `40 - 44` -> `40 - 44...49`\n• `45 - 49` -> `45 - 49...50`\n• `50 - 54` -> `50 - 54...51`\n• `55 - 59` -> `55 - 59...52`\n• `60 - 64` -> `60 - 64...53`\n• `65 - 69` -> `65 - 69...54`\n• `70 - 74` -> `70 - 74...55`\n• `75 - 79` -> `75 - 79...56`\n• `80 - 84` -> `80 - 84...57`\n• `85 & Over` -> `85 & Over...58`\n• `` -> `...59`\n\n\n\n\n\nhead(pop_data, 5)\n\n# A tibble: 5 × 58\n  ...1   Total…¹ 0 - 4…² 5 - 9…³ 10 - …⁴ 15 - …⁵ 20 - …⁶ 25 - …⁷ 30 - …⁸ 35 - …⁹\n  <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  \n1 Total  3902690 183580  204450  214390  242900  264130  271030  290620  301070 \n2 Ang M… 174770  6790    7660    8290    9320    10310   11170   12250   13070  \n3 Ang M… 5020    260     280     320     280     260     310     370     420    \n4 Cheng… 29770   1290    1180    1290    1400    1570    1830    2490    2490   \n5 Chong… 27900   910     1100    1180    1370    1520    1800    1980    2100   \n# … with 48 more variables: `40 - 44...11` <chr>, `45 - 49...12` <chr>,\n#   `50 - 54...13` <chr>, `55 - 59...14` <chr>, `60 - 64...15` <chr>,\n#   `65 - 69...16` <chr>, `70 - 74...17` <chr>, `75 - 79...18` <chr>,\n#   `80 - 84...19` <chr>, `85 & Over...20` <chr>, Total...21 <chr>,\n#   `0 - 4...22` <chr>, `5 - 9...23` <chr>, `10 - 14...24` <chr>,\n#   `15 - 19...25` <chr>, `20 - 24...26` <chr>, `25 - 29...27` <chr>,\n#   `30 - 34...28` <chr>, `35 - 39...29` <chr>, `40 - 44...30` <chr>, …\n\n\n\n\n\n\n\nPCN\n\npcn_data <- readr::read_csv(\"data/aspatial/PCN Clinic Listing (by PCN) With Postal Code.csv\")\n\nNew names:\nRows: 828 Columns: 19\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(13): PCN, Clinic Name, Address, Operating Hours (Please call the clinic... dbl\n(6): S/N, results.POSTAL...15, results.X, results.Y, results.LATITUDE, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `results.POSTAL` -> `results.POSTAL...9`\n• `results.POSTAL` -> `results.POSTAL...15`"
  },
  {
    "objectID": "posts/data_cleaning/index.html#geospatial-data",
    "href": "posts/data_cleaning/index.html#geospatial-data",
    "title": "Data Cleaning and Visualisation",
    "section": "Geospatial Data",
    "text": "Geospatial Data\n\nMaster Plan Subzone 2019\n\nCodeData\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial/MPSZ-2019\", \n                            layer = \"MPSZ-2019\") %>% \n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\data_cleaning\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nwrite_rds(mpsz, \"data/models/mpsz_original.rds\")\n\n\n\n\nhead(mpsz, 5)\n\nSimple feature collection with 5 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 22108.68 xmax: 33316.59 ymax: 31087.61\nProjected CRS: SVY21 / Singapore TM\n                SUBZONE_N SUBZONE_C      PLN_AREA_N PLN_AREA_C       REGION_N\n1             MARINA EAST    MESZ01     MARINA EAST         ME CENTRAL REGION\n2        INSTITUTION HILL    RVSZ05    RIVER VALLEY         RV CENTRAL REGION\n3          ROBERTSON QUAY    SRSZ01 SINGAPORE RIVER         SR CENTRAL REGION\n4 JURONG ISLAND AND BUKOM    WISZ01 WESTERN ISLANDS         WI    WEST REGION\n5            FORT CANNING    MUSZ02          MUSEUM         MU CENTRAL REGION\n  REGION_C                       geometry\n1       CR MULTIPOLYGON (((33222.98 29...\n2       CR MULTIPOLYGON (((28481.45 30...\n3       CR MULTIPOLYGON (((28087.34 30...\n4       WR MULTIPOLYGON (((14557.7 304...\n5       CR MULTIPOLYGON (((29542.53 31...\n\n\n\n\n\n\n\nEldercare\n\nCodeData\n\n\n\neldercare_sf <- st_read(dsn = \"data/geospatial/eldercare\", \n                            layer = \"ELDERCARE\") %>% \n  st_transform(crs = 3414)\n\nReading layer `ELDERCARE' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\data_cleaning\\data\\geospatial\\eldercare' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\nhead(eldercare_sf, 5)\n\nSimple feature collection with 5 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 30135.49 xmax: 38803.81 ymax: 36639.12\nProjected CRS: SVY21 / Singapore TM\n  fid OBJECTID ADDRESSBLO ADDRESSBUI ADDRESSPOS\n1   1        1       <NA>       <NA>     601318\n2   2        2       <NA>       <NA>     462509\n3   3        3       <NA>       <NA>     640190\n4   4        4       <NA>       <NA>     190005\n5   5        5       <NA>       <NA>     160044\n                             ADDRESSSTR ADDRESSTYP DESCRIPTIO HYPERLINK\n1     318A Jurong East Avenue 1 #02-308       <NA>       <NA>      <NA>\n2 Blk 509B Bedok North Street 3 #02-157       <NA>       <NA>      <NA>\n3        Blk 190 Boon Lay Drive #01-242       <NA>       <NA>      <NA>\n4                   5 Beach Rd #02-4943       <NA>       <NA>      <NA>\n5            Blk 44 Beo Crescent #01-67       <NA>       <NA>      <NA>\n  LANDXADDRE LANDYADDRE                                   NAME PHOTOURL\n1          0          0           Yuhua Senior Activity Centre     <NA>\n2          0          0                   THK SAC @ Kaki Bukit     <NA>\n3          0          0                     THK SAC @ Boon Lay     <NA>\n4          0          0 PEACE-Connect Senior Activity Centre@5     <NA>\n5          0          0                 THK SAC @ Beo Crescent     <NA>\n  ADDRESSFLO          INC_CRC FMEL_UPD_D ADDRESSUNI   X_ADDR   Y_ADDR\n1       <NA> 2B0DB92FDD914FFC 2016-07-28       <NA> 16614.08 36639.12\n2       <NA> 82728FA30612F3FD 2016-07-28       <NA> 38803.81 35098.78\n3       <NA> DE7A8D4EA0BD1D9B 2016-07-28       <NA> 14481.92 36357.61\n4       <NA> A2C058FC5785F7FE 2016-07-28       <NA> 31505.35 31853.52\n5       <NA> 9DBFD51E056AEE70 2016-07-28       <NA> 27218.35 30135.49\n                   geometry\n1 POINT (16614.08 36639.12)\n2 POINT (38803.81 35098.78)\n3 POINT (14481.92 36357.61)\n4 POINT (31505.35 31853.52)\n5 POINT (27218.35 30135.49)\n\n\n\n\n\n\n\nLocations of Bus Stops\n\nCodeData\n\n\n\nbusstop_sf <- st_read(dsn = \"data/geospatial/BusStop_Feb2023\", \n                            layer = \"BusStop\") %>% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\data_cleaning\\data\\geospatial\\BusStop_Feb2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\n\nhead(busstop_sf, 5)\n\nSimple feature collection with 5 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13228.59 ymin: 30391.85 xmax: 41603.76 ymax: 44206.38\nProjected CRS: SVY21 / Singapore TM\n  BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1      22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2      32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3      44331        B01              BLK 239  POINT (21045.1 40242.08)\n4      96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5      11561        B05              BLK 166 POINT (24568.74 30391.85)\n\n\n\n\n\n\n\nLocations of Train Stations\n\nCodeData\n\n\n\ntrainstation_sf <- st_read(dsn = \"data/geospatial/TrainStation_Feb2023\", \n                            layer = \"RapidTransitSystemStation\")[,c(-1, -2)] %>% \n  st_transform(crs = 3414)\n\nReading layer `RapidTransitSystemStation' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\data_cleaning\\data\\geospatial\\TrainStation_Feb2023' \n  using driver `ESRI Shapefile'\n\n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL\nMessage 1: Non closed ring detected. To avoid accepting it, set the\nOGR_GEOMETRY_ACCEPT_UNCLOSED_RING configuration option to NO\n\n\nSimple feature collection with 220 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 6068.209 ymin: 27478.44 xmax: 45377.5 ymax: 47913.58\nProjected CRS: SVY21\n\n\n\n\n\nhead(trainstation_sf, 5)\n\nSimple feature collection with 5 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 29286.74 ymin: 30548.91 xmax: 34623.54 ymax: 33404.47\nProjected CRS: SVY21 / Singapore TM\n  TYP_CD_DES              STN_NAM_DE                       geometry\n1        MRT   ESPLANADE MRT STATION POLYGON ((30566.07 30621.21...\n2        MRT  PAYA LEBAR MRT STATION POLYGON ((34495.6 33384.44,...\n3        MRT DHOBY GHAUT MRT STATION POLYGON ((29293.51 31312.53...\n4        MRT      DAKOTA MRT STATION POLYGON ((34055.08 32290.62...\n5        MRT    LAVENDER MRT STATION POLYGON ((31236.5 32085.76,...\n\n\n\n\n\n\n\nCHAS\n\nchas_sf <- st_read(dsn = \"data/geospatial/CHAS Clinics Shapefile\", \n                            layer = \"CHAS Clinics\") %>% \n  st_transform(crs = 3414)\n\nReading layer `CHAS Clinics' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\data_cleaning\\data\\geospatial\\CHAS Clinics Shapefile' \n  using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 1917 features and 19 fields (with 5 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4985.536 ymin: 26424.19 xmax: 45457.14 ymax: 48626.7\nProjected CRS: SVY21 / Singapore TM\n\n\n\nhead(chas_sf, 5)\n\nSimple feature collection with 5 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17595.29 ymin: 35041.76 xmax: 33064.94 ymax: 39158.18\nProjected CRS: SVY21 / Singapore TM\n  fid                              Name\n1   1                1 Aljunied Medical\n2   2                  1 BISHAN MEDICAL\n3   3               1 MEDICAL TECK GHEE\n4   4 1728 Dental Practice (Ang Mo Kio)\n5   5     1728 Dental Practice (Jurong)\n                                                                   Address\n1                                                         Singapore 367874\n2                          283, Bishan Street, #01- 191, Singapore\\n570283\n3 410, ANG MO KIO AVENUE 10, TECK GHEE SQUARE, #01- 837, Singapore\\n560410\n4                       704, Ang Mo Kio Ave 8, #01- 2559, Singapore 560704\n5                    135, Jurong Gateway Road, #01- 319,\\nSingapore 600135\n  Telephone                                                               Type\n1      <NA>                         Medical, Public Health Preparedness Clinic\n2  64561600 Medical, Cervical Cancer Screen, Public Health Preparedness Clinic\n3  62517030                                                            Medical\n4  96311728                                                             Dental\n5  97701728                                                             Dental\n  Website Pap.Test.S Postal.Cod results.PO\n1    <NA>          0     367874     367874\n2    <NA>          1     570283     570283\n3    <NA>          0     560410     560410\n4    <NA>          0     560704     560704\n5    <NA>          0     600135     600135\n                                 results.SE results.BL           results.RO\n1  389 UPPER ALJUNIED ROAD SINGAPORE 367874        389  UPPER ALJUNIED ROAD\n2     283 BISHAN STREET 22 SINGAPORE 570283        283     BISHAN STREET 22\n3 410 ANG MO KIO AVENUE 10 SINGAPORE 560410        410 ANG MO KIO AVENUE 10\n4  704 ANG MO KIO AVENUE 8 SINGAPORE 560704        704  ANG MO KIO AVENUE 8\n5      OCBC JURONG GATEWAY ROAD - FAIRPRICE        135  JURONG GATEWAY ROAD\n                            results.BU\n1                                  NIL\n2                                  NIL\n3                                  NIL\n4                                  NIL\n5 OCBC JURONG GATEWAY ROAD - FAIRPRICE\n                                                                     results.AD\n1                                      389 UPPER ALJUNIED ROAD SINGAPORE 367874\n2                                         283 BISHAN STREET 22 SINGAPORE 570283\n3                                     410 ANG MO KIO AVENUE 10 SINGAPORE 560410\n4                                      704 ANG MO KIO AVENUE 8 SINGAPORE 560704\n5 135 JURONG GATEWAY ROAD OCBC JURONG GATEWAY ROAD - FAIRPRICE SINGAPORE 600135\n  results._1 results.X results.Y results.LA results.LO\n1     367874  33064.94  35041.76   1.333179   103.8788\n2     570283  29272.03  37887.89   1.358919   103.8447\n3     560410  30373.38  38307.67   1.362715   103.8546\n4     560704  29548.25  39158.18   1.370407   103.8472\n5     600135  17595.29  35116.25   1.333852   103.7398\n                   geometry\n1 POINT (33064.94 35041.76)\n2 POINT (29272.03 37887.89)\n3 POINT (30373.38 38307.67)\n4 POINT (29548.25 39158.18)\n5 POINT (17595.29 35116.25)\n\n\n\nchas_sf <- chas_sf[rowSums(is.na(chas_sf)) == 0, ]"
  },
  {
    "objectID": "posts/data_cleaning/index.html#retrieve-geospatial-data",
    "href": "posts/data_cleaning/index.html#retrieve-geospatial-data",
    "title": "Data Cleaning and Visualisation",
    "section": "Retrieve Geospatial Data",
    "text": "Retrieve Geospatial Data\n\nGeneral Practitioner Clinics\n\nCodeData\n\n\n\ngp_sf <- st_as_sf(gp_data, coords=c(\"Long\", \"Lat\"), crs=4326) %>% st_transform(crs = 3414)\ngp_sf <- gp_sf[, c(1,2)]\n\n\n\n\nhead(gp_sf, 5)\n\nSimple feature collection with 5 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 24374.75 ymin: 28496.49 xmax: 33880.65 ymax: 33642.63\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 3\n  clinic                 postal_code            geometry\n  <chr>                  <chr>               <POINT [m]>\n1 RafflesMedical         159953         (24849.49 30114)\n2 Shenton Medical Group  119963      (24432.59 28496.49)\n3 Town Hall Clinic       119967      (24374.75 28916.52)\n4 Chuah Clinic & Surgery 380113      (33880.65 33642.63)\n5 ECM Clinic & Surgery   387604      (33518.21 33021.09)\n\n\n\n\n\n\n\nHospitals\n\nCodeData\n\n\n\nhospital_sf <- st_as_sf(hospital_data, coords=c(\"Long\", \"Lat\"), crs=4326) %>% st_transform(crs = 3414)\nhospital_sf <- hospital_sf[, c(1:7)]\n\n\n\n\nhead(hospital_sf, 5)\n\nSimple feature collection with 5 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 24230.14 ymin: 30059.55 xmax: 40784.33 ymax: 39338.44\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 8\n  HOSPITAL_NAME                  PRIVATE TYPE    MANAG…¹ ADDRESS POSTA…² NUM_O…³\n  <chr>                          <chr>   <chr>   <chr>   <chr>     <dbl> <chr>  \n1 ALEXANDRA HOSPITAL             Y       GENERAL <NA>    ALEXAN…  159964 176    \n2 BRIGHT VISION HOSPITAL         N       COMMUN… SINGHE… 5 LORO…  547530 317    \n3 CHANGI GENERAL HOSPITAL        N       GENERAL SINGHE… 2 SIME…  529889 1,000  \n4 CONCORD INTERNATIONAL HOSPITAL Y       SPECIA… <NA>    19 Ada…  289891 34     \n5 FARRER PARK HOSPITAL           Y       GENERAL <NA>    1 Farr…  217562 121    \n# … with 1 more variable: geometry <POINT [m]>, and abbreviated variable names\n#   ¹​MANAGED_BY, ²​POSTAL_CODE, ³​NUM_OF_BEDS\n\n\n\n\n\n\n\nPolyclinics\n\nCodeData\n\n\n\npoly_sf <- st_as_sf(poly_data, coords=c(\"Long\", \"Lat\"), crs=4326) %>% st_transform(crs = 3414)\npoly_sf <- poly_sf[, c(1:4)]\n\n\n\n\nhead(poly_sf, 5)\n\nSimple feature collection with 5 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 18485.22 ymin: 29566.29 xmax: 38996.66 ymax: 40477.96\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 5\n  POLYCLINIC               MANAGED_BY ADDRESS  POSTA…¹            geometry\n  <chr>                    <chr>      <chr>      <dbl>         <POINT [m]>\n1 ANG MO KIO POLYCLINIC    NHG        21 ANG …  569666 (29375.43 39591.35)\n2 BEDOK POLYCLINIC         Singhealth HEARTBE…  469662 (38996.66 34343.66)\n3 BUKIT BATOK POLYCLINIC   NUHS       50 BUKI…  659164 (18485.22 37124.65)\n4 BUKIT MERAH POLYCLINIC   Singhealth 163 BUK…  150163 (26191.96 29566.29)\n5 CHOA CHU KANG POLYCLINIC NUHS       2 TECK …  688846 (18814.15 40477.96)\n# … with abbreviated variable name ¹​POSTAL_CODE\n\n\n\n\n\n\n\nNursing Homes\n\nCodeData\n\n\n\nnursing_sf <- st_as_sf(nursing_data, coords=c(\"Long\", \"Lat\"), crs=4326) %>% st_transform(crs = 3414)\nnursing_sf <- nursing_sf[, c(1:3)]\n\n\n\n\nhead(nursing_sf, 5)\n\nSimple feature collection with 5 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17702.24 ymin: 35989.84 xmax: 42573.31 ymax: 46347.74\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 4\n  NURSING_HOME_NAME             ADDRESS        POSTA…¹            geometry\n  <chr>                         <chr>            <dbl>         <POINT [m]>\n1 ALL SAINTS HOME (HOUGANG)     5 Poh Huat Ro…  546703  (33635.6 38608.27)\n2 ALL SAINTS HOME (JURONG EAST) 20 JURONG EAS…  609792 (17702.24 35989.84)\n3 ALL SAINTS HOME (TAMPINES)    11 TAMPINES S…  529123 (41443.41 38141.06)\n4 ALL SAINTS HOME (YISHUN)      551 YISHUN RI…  768681 (27662.47 46347.74)\n5 APEX HARMONY LODGE            10 PASIR RIS …  518240  (42573.31 39170.3)\n# … with abbreviated variable name ¹​POSTAL_CODE\n\n\n\n\n\n\n\nPrimary Care Network"
  },
  {
    "objectID": "posts/data_cleaning/index.html#merge-mpsz-with-population-data",
    "href": "posts/data_cleaning/index.html#merge-mpsz-with-population-data",
    "title": "Data Cleaning and Visualisation",
    "section": "Merge MPSZ with Population Data",
    "text": "Merge MPSZ with Population Data\n\nConvert Data Types\n\npop_is_char <- sapply(pop_data[c(2:58)], is.character)\npop_data[c(2:58)][ , pop_is_char] <- as.data.frame(apply(pop_data[c(2:58)][ , pop_is_char], 2, as.numeric))\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\nWarning in apply(pop_data[c(2:58)][, pop_is_char], 2, as.numeric): NAs\nintroduced by coercion\n\npop_data_male <- pop_data[, c(1, 21:39)]\npop_data_female <- pop_data[, c(1, 40:58)]\npop_data <- pop_data[, c(1, 2:20)]\n\n\n\nPopulation\n\nTotal PopulationMale PopulationFemale PopulationSave RDS\n\n\n\npop_data$...1  = toupper(pop_data$...1)\nmpsz <- st_make_valid(mpsz)\ntotal_pop <- merge(x = mpsz, y = pop_data, by.x = \"SUBZONE_N\", by.y = \"...1\", all.x = TRUE)\nnames(total_pop)[7:25] = c(\"Total\", \"0 - 4\", \"5 - 9\", \"10 - 14\", \"15 - 19\",\"20 - 24\", \"25 - 29\", \"30 - 34\", \"35 - 39\", \"40 - 44\", \"45 - 49\", \"50 - 54\", \"55 - 59\", \"60 - 64\", \"65 - 69\", \"70 - 74\", \"75 - 79\", \"80 - 84\", \"85 & Over\")\n\n\n\n\npop_data_male$...1  = toupper(pop_data_male$...1)\nmpsz <- st_make_valid(mpsz)\nmale_pop <- merge(x = mpsz, y = pop_data_male, by.x = \"SUBZONE_N\", by.y = \"...1\", all.x = TRUE)\nnames(male_pop)[7:25] = c(\"Total\", \"0 - 4\", \"5 - 9\", \"10 - 14\", \"15 - 19\",\"20 - 24\", \"25 - 29\", \"30 - 34\", \"35 - 39\", \"40 - 44\", \"45 - 49\", \"50 - 54\", \"55 - 59\", \"60 - 64\", \"65 - 69\", \"70 - 74\", \"75 - 79\", \"80 - 84\", \"85 & Over\")\n\n\n\n\npop_data_female$...1  = toupper(pop_data_female$...1)\nmpsz <- st_make_valid(mpsz)\nfemale_pop <- merge(x = mpsz, y = pop_data_female, by.x = \"SUBZONE_N\", by.y = \"...1\", all.x = TRUE)\nnames(female_pop)[7:25] = c(\"Total\", \"0 - 4\", \"5 - 9\", \"10 - 14\", \"15 - 19\",\"20 - 24\", \"25 - 29\", \"30 - 34\", \"35 - 39\", \"40 - 44\", \"45 - 49\", \"50 - 54\", \"55 - 59\", \"60 - 64\", \"65 - 69\", \"70 - 74\", \"75 - 79\", \"80 - 84\", \"85 & Over\")\n\n\n\n\nsaveRDS(total_pop, file = \"data/models/total_pop.rds\")\nsaveRDS(male_pop, file = \"data/models/male_pop.rds\")\nsaveRDS(female_pop, file = \"data/models/female_pop.rds\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#validity-of-geometries-of-train-stations",
    "href": "posts/data_cleaning/index.html#validity-of-geometries-of-train-stations",
    "title": "Data Cleaning and Visualisation",
    "section": "Validity of Geometries of Train Stations",
    "text": "Validity of Geometries of Train Stations\n\nlength(which(st_is_valid(trainstation_sf) == FALSE))\n\n[1] 2\n\n\nmake valid cannot do\n\ntrainstation_sf <- trainstation_sf[st_is_valid(trainstation_sf) == TRUE,]\ntrainstation_sf <- trainstation_sf[!st_is_empty(trainstation_sf),,drop=FALSE]\nlength(which(st_is_valid(trainstation_sf) == FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 0"
  },
  {
    "objectID": "posts/data_cleaning/index.html#excluding-unnecessary-data-points",
    "href": "posts/data_cleaning/index.html#excluding-unnecessary-data-points",
    "title": "Data Cleaning and Visualisation",
    "section": "Excluding Unnecessary Data Points",
    "text": "Excluding Unnecessary Data Points\n\ngp_sf <- st_intersection(mpsz, gp_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nhospital_sf <- st_intersection(mpsz, hospital_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\npoly_sf <- st_intersection(mpsz, poly_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nnursing_sf <- st_intersection(mpsz, nursing_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nbusstop_sf <- st_intersection(mpsz, busstop_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\ntrainstation_sf <- st_intersection(mpsz, trainstation_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nchas_sf <- st_intersection(mpsz, chas_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\npcn_sf <- st_intersection(mpsz, pcn_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\neldercare_sf <- st_intersection(mpsz, eldercare_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries"
  },
  {
    "objectID": "posts/data_cleaning/index.html#general-practitioner-clinics-2",
    "href": "posts/data_cleaning/index.html#general-practitioner-clinics-2",
    "title": "Data Cleaning and Visualisation",
    "section": "General Practitioner Clinics",
    "text": "General Practitioner Clinics\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\n  tm_fill(palette = \"Blues\") + \ntm_shape(gp_sf) + \n  tm_symbols(shape=24,\n    col  = \"blue\",\n    size = 0.15) +\n  tm_layout(main.title=\"General Practitioner Clinics\",\n            main.title.position = \"center\") +\ntm_view(set.zoom.limits = c(11,14),\n          set.view = 11,\n        set.bounds = TRUE) \n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nSymbol shapes other than circles or icons are not supported in view mode."
  },
  {
    "objectID": "posts/data_cleaning/index.html#hospitals-2",
    "href": "posts/data_cleaning/index.html#hospitals-2",
    "title": "Data Cleaning and Visualisation",
    "section": "Hospitals",
    "text": "Hospitals\n\ngeneral_hospital = hospital_sf[hospital_sf$TYPE == \"GENERAL\",]\nspecialised_hospital = hospital_sf[hospital_sf$TYPE == \"SPECIALISED\",]\ncommunity_hospital = hospital_sf[hospital_sf$TYPE == \"COMMUNITY\",]\n\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(general_hospital) + \n  tm_symbols(\n    shape=23,\n    col  = \"red\",\n    size = 0.15) +\ntm_shape(specialised_hospital) + \n  tm_symbols(\n    shape=23,\n    col  = \"blue\",\n    size = 0.15) +\ntm_shape(community_hospital) + \n  tm_symbols(\n    shape=23,\n    col  = \"green\",\n    size = 0.15) +\n  tm_layout(main.title=\"Hospitals\",\n            main.title.position = \"center\")\n\nSymbol shapes other than circles or icons are not supported in view mode."
  },
  {
    "objectID": "posts/data_cleaning/index.html#polyclinics-2",
    "href": "posts/data_cleaning/index.html#polyclinics-2",
    "title": "Data Cleaning and Visualisation",
    "section": "Polyclinics",
    "text": "Polyclinics\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(poly_sf) + \n  tm_symbols(shape=22,\n    col  = \"orange\",\n    size = 0.15) +\n  tm_layout(main.title=\"Polyclinics\",\n            main.title.position = \"center\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#nursing-homes-2",
    "href": "posts/data_cleaning/index.html#nursing-homes-2",
    "title": "Data Cleaning and Visualisation",
    "section": "Nursing Homes",
    "text": "Nursing Homes\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(nursing_sf) + \n  tm_symbols(shape=21,\n    col  = \"green\",\n    size = 0.15) +\n  tm_layout(main.title=\"Nursing Homes\",\n            main.title.position = \"center\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#eldercare-1",
    "href": "posts/data_cleaning/index.html#eldercare-1",
    "title": "Data Cleaning and Visualisation",
    "section": "Eldercare",
    "text": "Eldercare\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(eldercare_sf) + \n  tm_symbols(shape=21,\n    col  = \"green\",\n    size = 0.15) +\n  tm_layout(main.title=\"Eldercare\",\n            main.title.position = \"center\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#bus-stops",
    "href": "posts/data_cleaning/index.html#bus-stops",
    "title": "Data Cleaning and Visualisation",
    "section": "Bus Stops",
    "text": "Bus Stops\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(busstop_sf) + \n  tm_symbols(shape=20,\n    col  = \"darkblue\",\n    size = 0.15) +\n  tm_layout(main.title=\"Bus Stops\",\n            main.title.position = \"center\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#mrt-stations",
    "href": "posts/data_cleaning/index.html#mrt-stations",
    "title": "Data Cleaning and Visualisation",
    "section": "MRT Stations",
    "text": "MRT Stations\n\nmrt <- trainstation_sf[trainstation_sf$TYP_CD_DES == \"MRT\",]\nlrt <- trainstation_sf[trainstation_sf$TYP_CD_DES == \"LRT\",]\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4) +\ntm_shape(mrt) + \n  tm_symbols(shape=20,\n    col  = \"green\",\n    size = 0.15) +\ntm_shape(lrt) + \n  tm_symbols(shape=20,\n    col  = \"darkgreen\",\n    size = 0.15) +\n  tm_layout(main.title=\"Train Stations\",\n            main.title.position = \"center\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#chas-1",
    "href": "posts/data_cleaning/index.html#chas-1",
    "title": "Data Cleaning and Visualisation",
    "section": "CHAS",
    "text": "CHAS\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(total_pop) +\n  tm_polygons(\n    \"Total\",\n    style = \"cont\",\n    alpha = 0.4,) +\n  tm_fill(col=\"oranges\") + \ntm_shape(chas_sf) + \n  tm_symbols(shape=24,\n    col  = \"blue\",\n    size = 0.15) +\n  tm_layout(main.title=\"CHAS Clinics\",\n            main.title.position = \"center\")\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "posts/data_cleaning/index.html#conversion-of-datatypes",
    "href": "posts/data_cleaning/index.html#conversion-of-datatypes",
    "title": "Data Cleaning and Visualisation",
    "section": "Conversion of Datatypes",
    "text": "Conversion of Datatypes\nidk why train stations converts into spatial polygon\n\nConverting sf data frames to sp’s Spatial class\n\nmpsz_spatial <- as_Spatial(mpsz)\ngp_spatial <- as_Spatial(gp_sf)\nhospital_spatial <- as_Spatial(hospital_sf)\npoly_spatial <- as_Spatial(poly_sf)\nnursing_spatial <- as_Spatial(nursing_sf)\nbusstop_spatial <- as_Spatial(busstop_sf)\ntrainstation_spatial <- as_Spatial(trainstation_sf)\nchas_spatial <- as_Spatial(chas_sf)\npcn_spatial <- as_Spatial(pcn_sf)\neldercare_spatial <- as_Spatial(eldercare_sf)\n\n\n\nConverting sp’s *Spatial** Class into Generic sp Format\n\nmpsz_sp <- as(mpsz_spatial, \"SpatialPolygons\")\ngp_sp <- as(gp_spatial, \"SpatialPoints\")\nhospital_sp <- as(hospital_spatial, \"SpatialPoints\")\npoly_sp <- as(poly_spatial, \"SpatialPoints\")\nnursing_sp <- as(nursing_spatial, \"SpatialPoints\")\nbusstop_sp <- as(busstop_spatial, \"SpatialPoints\")\nchas_sp <- as(chas_spatial, \"SpatialPoints\")\npcn_sp <- as(pcn_spatial, \"SpatialPoints\")\neldercare_sp <- as(eldercare_spatial, \"SpatialPoints\")\ntrainstation_sp <- as(trainstation_spatial, \"SpatialPolygons\")\n\n\n\nConverting Generic sp Format into spatstat’s ppp Format\n\ngp_ppp <- as(gp_sp, \"ppp\")\nhospital_ppp <- as(hospital_sp, \"ppp\")\npoly_ppp <- as(poly_sp, \"ppp\")\nnursing_ppp <- as(nursing_sp, \"ppp\")\nbusstop_ppp <- as(busstop_sp, \"ppp\")\nchas_ppp <- as(chas_sp, \"ppp\")\npcn_ppp <- as(pcn_sp, \"ppp\")\neldercare_ppp <- as(eldercare_sp, \"ppp\")\n\n\n\nData Visualisation\n\nMaster Plan Subzone 2019General Practitioner ClinicsHospitalsPolyclinicsNursing HomesGeneral Practitioner ClinicsBus StopsMrt StationsCHAS\n\n\n\nplot(mpsz_spatial, main=\"General Practitioner Clinics\")\n\n\n\n\n\n\n\nplot(gp_ppp, main=\"General Practitioner Clinics\")\n\n\n\n\n\n\n\nplot(hospital_ppp, main=\"Hospitals\")\n\n\n\n\n\n\n\nplot(poly_ppp, main=\"Polyclinics\")\n\n\n\n\n\n\n\nplot(nursing_ppp, main=\"Nursing Homes\")\n\n\n\n\n\n\n\nplot(eldercare_ppp, main=\"Eldercares\")\n\n\n\n\n\n\n\nplot(busstop_ppp, main=\"Bus Stops\")\n\n\n\n\n\n\n\nplot(trainstation_spatial, main=\"Mrt Stations\")\n\n\n\n\n\n\n\nplot(chas_ppp, main=\"CHAS Clinics\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#check-for-duplicate-data-points",
    "href": "posts/data_cleaning/index.html#check-for-duplicate-data-points",
    "title": "Data Cleaning and Visualisation",
    "section": "Check for Duplicate Data Points",
    "text": "Check for Duplicate Data Points\n\nany(duplicated(gp_ppp))\n\n[1] TRUE\n\n\n\nany(duplicated(hospital_ppp))\n\n[1] FALSE\n\n\n\nany(duplicated(poly_ppp))\n\n[1] FALSE\n\n\n\nany(duplicated(nursing_ppp))\n\n[1] TRUE\n\n\n\nany(duplicated(busstop_ppp))\n\n[1] TRUE\n\n\n\nany(duplicated(chas_ppp))\n\n[1] TRUE\n\n\n\nany(duplicated(eldercare_ppp))\n\n[1] FALSE\n\n\n\nHandle Duplicated Points\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(gp_ppp) > 1)\n\n[1] 554\n\n\n\nsum(multiplicity(nursing_ppp) > 1)\n\n[1] 4\n\n\n\nsum(multiplicity(busstop_ppp) > 1)\n\n[1] 2\n\n\n\nsum(multiplicity(pcn_ppp) > 1)\n\n[1] 268\n\n\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\n\ngp_ppp_jit <- rjitter(gp_ppp,retry = TRUE,\n                             nsim = 1, \n                             drop = TRUE)\nany(duplicated(gp_ppp_jit))\n\n[1] FALSE\n\n\n\nnursing_ppp_jit <- rjitter(nursing_ppp,retry = TRUE,\n                             nsim = 1, \n                             drop = TRUE)\nany(duplicated(nursing_ppp_jit))\n\n[1] FALSE\n\n\n\nbusstop_ppp_jit <- rjitter(busstop_ppp,retry = TRUE,\n                             nsim = 1, \n                             drop = TRUE)\nany(duplicated(busstop_ppp_jit))\n\n[1] FALSE\n\n\n\nchas_ppp_jit <- rjitter(chas_ppp,retry = TRUE,\n                             nsim = 1, \n                             drop = TRUE)\nany(duplicated(chas_ppp_jit))\n\n[1] FALSE\n\n\n\npcn_ppp_jit <- rjitter(pcn_ppp,retry = TRUE,\n                             nsim = 1, \n                             drop = TRUE)\nany(duplicated(pcn_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "posts/data_cleaning/index.html#creating-owin-object",
    "href": "posts/data_cleaning/index.html#creating-owin-object",
    "title": "Data Cleaning and Visualisation",
    "section": "Creating owin Object",
    "text": "Creating owin Object\n\nmpsz_owin <- as(mpsz_sp, \"owin\")\ngp_ppp = gp_ppp_jit[mpsz_owin]\nhospital_ppp = hospital_ppp[mpsz_owin]\npoly_ppp = poly_ppp[mpsz_owin]\nnursing_ppp = nursing_ppp_jit[mpsz_owin]\nbusstop_ppp = busstop_ppp_jit[mpsz_owin]\nchas_ppp = chas_ppp_jit[mpsz_owin]\npcn_ppp = pcn_ppp_jit[mpsz_owin]\neldercare_ppp = eldercare_ppp[mpsz_owin]\nmpsz_owin\n\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units"
  },
  {
    "objectID": "posts/data_cleaning/index.html#kernel-density-estimation-kde",
    "href": "posts/data_cleaning/index.html#kernel-density-estimation-kde",
    "title": "Data Cleaning and Visualisation",
    "section": "Kernel Density Estimation (KDE)",
    "text": "Kernel Density Estimation (KDE)\nrescale\n\ngp_ppp.km <- rescale(gp_ppp, 1000, \"km\")\nhospital_ppp.km <- rescale(hospital_ppp, 1000, \"km\")\npoly_ppp.km <- rescale(poly_ppp, 1000, \"km\")\nnursing_ppp.km <- rescale(nursing_ppp, 1000, \"km\")\nbusstop_ppp.km <- rescale(busstop_ppp, 1000, \"km\")\nchas_ppp.km <- rescale(chas_ppp, 1000, \"km\")\npcn_ppp.km <- rescale(pcn_ppp, 1000, \"km\")\neldercare_ppp.km <- rescale(eldercare_ppp, 1000, \"km\")\n\nsaveRDS(chas_ppp.km, file = \"data/models/chas_ppp_km.rds\")\n\n\nGeneral Practitioner Clinics\n\ngp_bw <- density(gp_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\n\nplot(gp_bw, main = \"General Practitioner Clinics\")\n\n\n\n\n\n\nHospitals\n\nhospital_bw <- density(hospital_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(hospital_bw, main = \"Hospitals\")\n\n\n\n\n\n\nPolyclinics\n\npoly_bw <- density(poly_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(poly_bw, main = \"Polyclinics\")\n\n\n\n\n\n\nNursing Homes\n\nnursing_bw <- density(nursing_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(nursing_bw, main = \"Nursing Homes\")\n\n\n\n\n\n\nCHAS Clinics\n\nchas_bw <- density(chas_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(chas_bw, main = \"CHAS Clinics\")\n\n\n\n\n\n\nPCN\n\npcn_bw <- density(pcn_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(pcn_bw, main = \"Primary Care Networks (PCN)\")\n\n\n\n\nBus Stops\n\nbusstop_bw <- density(busstop_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(busstop_bw, main = \"Bus Stops\")"
  },
  {
    "objectID": "posts/data_cleaning/index.html#converting-kde-output-into-grid-object",
    "href": "posts/data_cleaning/index.html#converting-kde-output-into-grid-object",
    "title": "Data Cleaning and Visualisation",
    "section": "Converting KDE Output into Grid Object",
    "text": "Converting KDE Output into Grid Object\n\nGeneral Practitioner Clinics\n\ngridded_gp_bw <- as.SpatialGridDataFrame.im(gp_bw)\nspplot(gridded_gp_bw, main = \"General Practitioners\")\n\n\n\n\n\n\nHospitals\n\ngridded_hospital_bw <- as.SpatialGridDataFrame.im(hospital_bw)\nspplot(gridded_hospital_bw)\n\n\n\n\n\n\nPolyclinics\n\ngridded_poly_bw <- as.SpatialGridDataFrame.im(poly_bw)\nspplot(gridded_poly_bw)\n\n\n\n\n\n\nNursing Homes\n\ngridded_nursing_bw <- as.SpatialGridDataFrame.im(nursing_bw)\nspplot(gridded_nursing_bw)\n\n\n\n\n\n\nBus Stops\n\ngridded_busstop_bw <- as.SpatialGridDataFrame.im(busstop_bw)\nspplot(gridded_busstop_bw)\n\n\n\n\n\n\nCHAS\n\n# gridded_chas_bw <- as.SpatialGridDataFrame.im(chas_bw)\n# spplot(gridded_chas_bw)"
  },
  {
    "objectID": "posts/data_cleaning/index.html#converting-gridded-output-into-raster",
    "href": "posts/data_cleaning/index.html#converting-gridded-output-into-raster",
    "title": "Data Cleaning and Visualisation",
    "section": "Converting Gridded Output into Raster",
    "text": "Converting Gridded Output into Raster\n\nGeneral Practitioner Clinics\n\nkde_gp_bw_raster <- raster(gridded_gp_bw)\nprojection(kde_gp_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_gp_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.971092e-14, 97.19965  (min, max)\n\n\n\n\nHospitals\n\nkde_hospital_bw_raster <- raster(gridded_hospital_bw)\nprojection(kde_hospital_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_hospital_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -6.617214e-17, 0.6530283  (min, max)\n\n\n\n\nPolyclinics\n\nkde_poly_bw_raster <- raster(gridded_poly_bw)\nprojection(kde_poly_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_poly_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : 1.253552e-17, 0.1114663  (min, max)\n\n\n\n\nNursing Homes\n\nkde_nursing_bw_raster <- raster(gridded_nursing_bw)\nprojection(kde_nursing_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_nursing_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.246191e-16, 0.87121  (min, max)\n\n\n\n\nBus Stops\n\nkde_busstop_bw_raster <- raster(gridded_busstop_bw)\nprojection(kde_busstop_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_busstop_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.15015e-14, 46.68152  (min, max)\n\n\n\n\nCHAS\n\nkde_busstop_bw_raster <- raster(gridded_busstop_bw)\nprojection(kde_busstop_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_busstop_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.15015e-14, 46.68152  (min, max)\n\n\n\n\nVisualisation\n\nGeneral Practitioner Clinics\n\ntm_shape(kde_gp_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nHospitals\n\ntm_shape(kde_hospital_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nPolyclinics\n\ntm_shape(kde_poly_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\nNursing Homes\n\ntm_shape(kde_nursing_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nBus Stops\n\ntm_shape(kde_busstop_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nCHAS Clinics\n\nchas_bw <- density(chas_ppp.km,\n             sigma = bw.diggle,\n             edge = TRUE,\n             kernel = \"gaussian\")\n\nplot(chas_bw, main = \"CHAS Clinics\")\n\n\n\n\n\ntm_shape(kde_busstop_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "posts/data_cleaning/index.html#nearest-neighbour-analysis",
    "href": "posts/data_cleaning/index.html#nearest-neighbour-analysis",
    "title": "Data Cleaning and Visualisation",
    "section": "Nearest Neighbour Analysis",
    "text": "Nearest Neighbour Analysis\n\nGeneral Practitioner Clinics\n\nHo = The distribution of general practitioner clinics are randomly distributed.\nH1 = The distribution of general practitioner clinics are not randomly distributed.\n\nWith the p-value lower than the alpha value of 0.05, we reject the null hypothesis and accept that general practitioner clinics are not randomly distributed.\n\nclarkevans.test(gp_ppp.km,\n                correction = \"none\", \n                clipregion = \"mpsz_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  gp_ppp.km\nR = 0.34517, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\nHospitals\n\nHo = The distribution of hospitals are randomly distributed.\nH1 = The distribution of hospitals are not randomly distributed.\n\nWith the p-value lower than the alpha value of 0.05, we reject the null hypothesis and accept that hospitals are not randomly distributed.\n\nclarkevans.test(hospital_ppp.km,\n                correction = \"none\", \n                clipregion = \"mpsz_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  hospital_ppp.km\nR = 0.45977, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\nPolyclinics\n\nHo = The distribution of polyclinics are randomly distributed.\nH1 = The distribution of polyclinics are not randomly distributed.\n\nWith the p-value above than the alpha value of 0.05, we accept the null hypothesis and accept that polyclinics are randomly distributed.\n\nclarkevans.test(poly_ppp.km,\n                correction = \"none\", \n                clipregion = \"mpsz_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  poly_ppp.km\nR = 1.0189, p-value = 0.14\nalternative hypothesis: clustered (R < 1)\n\n\n\n\nNursing Homes\n\nHo = The distribution of nursing homes are randomly distributed.\nH1 = The distribution of nursing homes are not randomly distributed.\n\nWith the p-value lower than the alpha value of 0.05, we reject the null hypothesis and accept that nursing homes are not randomly distributed.\n\nclarkevans.test(nursing_ppp.km,\n                correction = \"none\", \n                clipregion = \"mpsz_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  nursing_ppp.km\nR = 0.71101, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\nCHAS Clinics\n\nHo = The distribution of CHAS clinics are randomly distributed.\nH1 = The distribution of CHAS clinics are not randomly distributed.\n\nWith the p-value lower than the alpha value of 0.05, we reject the null hypothesis and accept that CHAS clinics are not randomly distributed.\n\nclarkevans.test(chas_ppp.km,\n                correction = \"none\", \n                clipregion = \"mpsz_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  chas_ppp.km\nR = 0.48715, p-value = 0.01\nalternative hypothesis: clustered (R < 1)"
  },
  {
    "objectID": "posts/proposal/index.html",
    "href": "posts/proposal/index.html",
    "title": "Proposal",
    "section": "",
    "text": "More details will be added..\n\n\n\nAt the moment, we are still exploring available datasets. We update this page as time goes on.\n\n\n\nProblem\nThe number of heathcare facilities, ranging from private clinics to polyclinics to general hospitals, has been increasing over the years. No doubt, it will increase the availability and accessibility of hospitals for the public, or does it?\n\n\nMotivation\nAs Singapore’s population ages and overall population expands, we can foresee the increasing need of healthcare facilities in the future. Importantly, the aging population will face difficulties in travelling to the facilities.\nWe want to explore the relation between transportation and these facilities.\n\n\nDataset\n\nMaster Plan 2014 Subzone Boundary (Web) - SHP files of Singapore subzone boundaries\nResident Population by Planning Area/Subzone, Age Group and Sex, 2015 - CSV file\nSDCP MRT Station Point - SHP files\nBus Stop Location - SHP files\n\n\n\nRelevant Works\n\nAccess to Healthcare in Singapore (by Lim Ee Jean) - She crucially analysed the population in Singapore that can reach a hospital within certain time limits. This is similar to our project, however it lacks the interactivity and additional details that are required to further understand the relationships between transportation and medical institutions.\n\n\n\nSystem Architecture\n\n\n\n\n\n\n\nPrototypes\n\n\n\nProposal Page\n\n\n\n\n\nEDA\n\n\n\n\n\nAnalysis"
  },
  {
    "objectID": "posts/report/index.html",
    "href": "posts/report/index.html",
    "title": "Paper",
    "section": "",
    "text": "Accessibility and distribution of healthcare networks are critical for national healthcare, particularly for the elderly population who are at a higher risk of developing multiple chronic illnesses.\nSince the restructuring of the Regional Health System (RHS) in 2017, Singapore has implemented health policies by creating an integrated network of acute hospitals, community and primary care providers within a certain geographic region, aiming to provide comprehensive care and a care continuum for patients [4].\nHowever, little emphasis has been given to assessing the accessibility of healthcare services from a geospatial analytical perspective. This research article aims to analyse the geographical accessibility, kernel density clusters and distribution networks of major healthcare services in Singapore, which includes acute and community hospitals, primary care networks (PCN), eldercare and nursing homes, and General Practitioners (GPs) services under the Community Health Assist Scheme (CHAS) for older persons.\n\n\n\nWith an ageing population and a growing burden of chronic diseases, care delivery in Singapore is becoming increasingly complex [10]. The country’s health system is shifting its focus beyond hospitals to the community with an emphasis on health promotion at all stages of life [7]. This approach is highlighted under the Ministry of Health’s (MOH) strategic planning in preventive care to ensure long-term sustainability, reducing expenditure while providing quality and affordable healthcare for people of all ages.\nWithin Singapore’s healthcare system, it consists of three Regional Health System (RHS) providers, namely SingHealth, National Healthcare Group (NHG), and National University Health System (NUHS). To be future-ready, RHS providers are increasingly looking into areas of health informatics, geographical and geospatial information to improve health service delivery outcomes, reduce cost, and improve continuity of care within the community [6].\n\n\n\n\n\nWe obtained address information and postal codes of publicly available data on Acute and Community Hospitals, Eldercare Facilities and Nursing Homes, Primary Care Networks (PCN), and General Practitioners (GPs) services under the Community Health Assist Scheme (CHAS) from relevant governmental agencies and other websites.\n\n\n\nTable 1: Data Sources\n\n\n\n\n\n\n\nData\nSource\nAdditional Actions Required\n\n\n\n\nGovernment Restructured Hospitals\nHealthHub\nConversion to SHP Files\n\n\nCommunity and Rehabilitation Hospitals\nHealthHub\nConversion to SHP Files\n\n\nPolyclinics\nProfessor Kam Tin Seong\n\n\n\nNursing Homes\nProfessor Kam Tin Seong\n\n\n\nEldercare Facilities\nData.gov.sg\n\n\n\nPrimary Care Networks Clinics\nAgency for Integrated Care (AIC)\nConversion to SHP Files\n\n\nCommunity Health Assist Scheme Clinics\nAgency for Integrated Care (AIC) & Community Health Assist Scheme (CHAS)\n\n\n\nMaster Plan 2014 Planning Area Boundary (Web)\nData.gov.sg\n\n\n\nMaster Plan 2019 Subzone Boundary (No Sea)\nData.gov.sg\n\n\n\nResident Population by Planning Area/Subzone, Ethnic Group and Sex, 2015\nData.gov.sg\n\n\n\nRoads Networks in Singapore\nOpen Street Map\n\n\n\nResidential Buildings in Singapore\nOpen Street Map\n\n\n\n\n\n\n\n\nWe use R studio to perform geocoding of the addresses and postal codes using SLA API. After which, the data is transformed and converted into the geospatial data point of locations of various healthcare facilities into easily accessible shapefiles for usage in our R programming for geospatial analysis methods. Data scraping from web datatables are also conducted. The data scraped then required manual data cleaning for incorrectly reflected information as certain webpages did not provide correct/updated information.\n\n\n\nWe used mainly two geospatial methods in our analysis of healthcare service in Singapore.\nFirst method is Kernel Density Estimation (KDE). It allows the evaluation of the clustering patterns and distribution of healthcare facilities in Singapore.\nSecond method is geographical modelling of accessibility. Visualisation using Hansen, KD2SFCA, SAM and 2SFCA Methods to measure the accessibility of healthcare services in Singapore, and will be analysed in this paper.\n\n\n\n\nIt is crucial to assess the healthcare system’s distribution and accessibility in Singapore to ensure that all residents have access to high-quality medical care. This application aims to do just that by providing valuable insights into the distribution of primary and tertiary healthcare facilities in Singapore.\nBy using geospatial analytics, visualisation and mapping techniques, this application will identify potential gaps or disparities in healthcare accessibility and distribution. We hope that the insights gained from this analysis will help policymakers and healthcare providers to make data-driven decisions to improve the planning and distribution of healthcare services in Singapore.\nThe map models generated by this application will identify areas with high population densities but low healthcare facility densities, allowing policymakers to allocate resources and invest in healthcare infrastructure in these underserved areas. With these insights, policymakers can ensure that all residents have equal access to high-quality medical care, regardless of their location or socioeconomic status.\nThis application’s visualisation and mapping capabilities will provide a detailed understanding of the healthcare system in Singapore, making it easier for policymakers and healthcare providers to identify areas for improvement. By utilising data-driven insights, Singapore can continue to be a leader in healthcare and ensure that all residents receive the best possible medical care.\nIn summary, this application’s persuasive and dominant motivation is to identify potential gaps and disparities in healthcare accessibility and distribution in Singapore, provide valuable insights to policymakers and healthcare providers, and ultimately ensure that all residents have equal access to high-quality medical care.\n\n\n\nTo acquire accessibility, we need to obtain the road networks in Singapore. This data can be found from Open Street Map, which includes residential walkways and roads used by traffic. Hence we had to perform filtering methods to filter out roads used by vehicle transportation and small roads within living estates of Singapore residential areas.\n\n\n\nFigure 1: All Road Networks in Singapore before filtering, taken from QGIS\n\n\nIn addition, we need to derive Origin-Destination (OD) Matrix for each type of medical facility. The process was time consuming but necessary for further data processing.\nIn order to accomplish this, we utilise QGIS Network Analysis Toolbox 3 (QNEAT3) Network Analysis for OD Matrix Computation between the hospital facilities and road networks points.\n\n\nSimilarly using QGIS, we obtained the public and private residential buildings in Singapore, which is then saved as a shapefile\n\n\n\nFigure 2: Public and Private Residential Buildings in Singapore\n\n\n\n\n\n\n\n\nFigure 3: URA Master Plan\n\n\nIn this paper, we will be using the URA Master Plan Subzone map provided by Urban Redevelopment Authority (URA) as our reference point for the description of geographical locations within Singapore for easier understanding.\n\n\n\nFigure 4: Clusters of Buildings in Singapore, after using Real-Centroid in QGIS\n\n\nIn Figure 4, we had applied Real-Centroid to extract out the centroids of all livable buildings in Singapore in QGIS.\nThis will help us mathematically estimate and visually understand the demand within different geographical regions based on clusters of points of residents buildings within each region. This further enables us to learn the geographical accessibility of various regions within Singapore. This would be effective in interpreting how the density/cluster sof KDE should be like for each given region.\nLooking at Figure 4, we can derive that the largest proportion of citizens live in the Central, followed by Northeast, Southeast and southwest, due to the large clusters of data points overlapping each another on the map. A small group of people is also noted to live close to the north-west region of Singapore. This will help us get a general understanding of the demand and supply, distribution of health service and accessibility of healthcare within certain regions.\nWe would like to highlight that regions covered by forests have understandably no healthcare facility. As a result, it is important to take this into account when analysing our data for accessibility and distribution of healthcare services.\n\n\n\n\n\nFigure 5: Accessibility of Eldercare Facilities (Hansen Method)\n\n\n\n\nWe analyse the accessibility of eldercare facilities which accHansen values fall within 0 (lower limit) to 1100 (upper limit). We also want to highlight that the ranges for accHansen may vary depending on the healthcare facilities dataset being used.\nAn efficient way to understand the data is to view the colour distribution. Dark shades represent higher accessibility of the healthcare facilities.\nIn our analysis of eldercare facilities, we will use the following measures:\n\nHansen value between 0 and 51 is considered low accessibility\nHansen value between 52 and 200 is considered moderate accessibility\nHansen values above 200 is considered high accessibility.\n\n\n\n\nFrom the figure, we can observe that accessibility of eldercare facilities is largely within the Central region of Singapore. However, the Northeast, Southeast and Southwest regions are generally largely accessible for residents as well.\nAt the top of the Northwest region, there is a lack of eldercare facilities, in which health policy makers could consider building more eldercare facilities in future national budgeting and planning. But the visualisation of the model suggests that eldercare are generally well distributed across Singapore.\n\n\n\n\n\n\n\nFigure 6: Accessibility of PCN Clinics (Hansen Method)\n\n\n\n\nIn our analysis of PCN clinics, we will use the following measures:\n\nHansen value between 0 and 219 is considered low accessibility\nHansen value between 220 and 1263 is considered moderate accessibility\nHansen values above 1264 is considered high accessibility.\n\nWe will also be understanding the accessibility through the colour distribution. Dark shades represent higher accessibility of the healthcare facilities.\n\n\n\nWe can observe that accessibility of PCN facilities are highly accessible within the Central, Northeast and Southeast regions of Singapore, with reference to the darker regions. Additionally, the Northwest region has acceptable range within the moderate accessibility of PCN clinics for its residents.\n\n\n\n\n\n\n\nFigure 7: Accessibility of CHAS Clinics (Hansen Method)\n\n\n\n\nIn our analysis of CHAS clinics, we will use the following measures:\n\nHansen value between 0 and 438 is considered low accessibility\nHansen value between 439 and 2808 is considered moderate accessibility\nHansen values above 2809 is considered high accessibility.\n\nSimilarly, we will be using the colour distribution as a way to access the graph.\n\n\n\nFrom the figure above, it can be observed that accessibility of GP Clinics under CHAS are concentrated in the Central, Northeast, and Southeast regions of Singapore, as indicated by the darker regions. The Northwest region has also acceptable range within the moderate accessibility of CHAS Clinics for its residents.\n\n\n\n\n\n\n\nFigure 8: Accessibility of Hospitals (Hansen Method)\n\n\n\n\nIn our analysis of hospitals, we will use the following measures:\n\nHansen value between 0 and 2.260 is considered low accessibility.\nHansen value between 2.260 and 30.232 is considered moderate accessibility.\nHansen values above 30.232 is considered high accessibility.\n\nLikewise, the colour distribution will be used for analysis.\n\n\n\nFrom the figure, it can be observed that accessibility of Government Restructured Hospitals are largely accessible within the Central, Northeast, Southwest regions of Singapore, as indicated by the darker colours within these areas. The Northwest region is in an acceptable range.\nUpcoming Hospital\n\n\nThe Southeast regions have notably less Government Restructured Hospitals, suggesting residents living near and within the Marine Parade region may be under-served.\nMOH has announced that they will be building an Eastern Integrated Health Campus. Therefore, we believe that the accessibility for residents living in the Southeast region will improve once it is built [5].\n\n\n\n\n\nFigure 9: Info on Eastern Integrated Health Campus\n\n\n\n\n\n\n\n\n\n\nFigure 10: Accessibility of Polyclinics (Hansen Method)\n\n\n\n\nIn our analysis of polyclinics, we will use the following measures:\n\nHansen value between 0 and 6.059 is considered low accessibility.\nHansen value between 6.059 and 32.053 is considered moderate accessibility.\nHansen values above 32.053 is considered high accessibility.\n\nDarker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region.\n\n\n\nFrom the diagram, it can be observed that accessibility of polyclinics is largely accessible within the Central, Northeast, Southwest and East regions of Singapore, as indicated by the dark colours within these areas.\nUpcoming Hospital\n\n\nNorthwest has relatively low accessibility. However, the construction of Woodlands Health Campus has been announced by MOH [5]. Therefore, it can be expected that the accessibility for residents living in the Northwest region will improve with the completion of the institution.\n\n\n\n\n\nFigure 11: Info on Woodlands Health Campus\n\n\n\n\n\n\n\n\n\n\n\nFigure 12: Accessibility of Nursing Homes (Hansen Method)\n\n\n\n\nIn our analysis of nursing homes, we will use the following measures:\n\nHansen value between 0 and 20.880 is considered low accessibility.\nHansen value between 20.880 and 108.574 is considered moderate accessibility.\nHansen values above 108.574 is considered high accessibility.\n\nAs mentioned, darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region.\n\n\n\nFrom the diagram, it can be observed that accessibility of nursing homes is largely accessible within all regions of Singapore, as indicated by the darker shades within the region.\n\n\n\n\n\nWithin this paper, we will be only interpreting the accessibility for Hansen method, understanding that there are also other methods namely KD2SFCA, SAM and 2SFCA. However, their principles are relatively similar to the Hansen methods of accessibility. Despite not elaborating in this paper, we have included them in our RShiny application [1].\n\n\n\n\n\n\nWe applied Kernel Density Estimation (KDE) to estimate the distribution of healthcare clusters and to understand the distribution and allocation of healthcare facilities within each geographical location. Within our analysis in this paper, KDE is performed using Cross Validated Bandwidth Selection (bw.diggle) and Gaussian kernel.\nCross Validated Bandwidth Selection, as its name implied, uses cross-validation to select a smoothing bandwidth that aid in KDE.\nThe Gaussian kernel estimates that points are closer to the allocated centre point have greater weight as compare to data point which are further from the middle point\nBefore proceeding, we would like to highlight KDE values fall within 0 (lower limit) to a higher number, depending on the dataset being used in computation. As such, KDE values may fall below 1, if the facilities are sparse across the region.\nHigher KDE values indicate that there is a higher density or clustering of healthcare facilities within the region. Similar to the interpretation of graphs for aalysing accessibility, we can also determine based on the colour.\n\nYellow - Indicating High Density / Clustering\nPink - Indicating Medium Density / Clustering\nDark Blue - Indicating Low Density / Clustering\n\n\n\n\n\n\nFigure 13: KDE of Hospitals\n\n\nIn interpreting the clustering of hospitals, we cannot confidently determine how many hospitals are within a certain area as the number of hospitals is relatively small and sparse. This is understandably due to their purpose as being the last stop for medical help, as noted in the planning of Singapore’s healthcare system. Hence, we are primarily relying on visual information to interpret the data as we cannot meaningful classify the KDE values lower than 1.\nBased on Figure 13, we can observe that the distribution of Government Restructured Hospitals shows a higher density / cluster of hospitals located within the Central region. Since the Central region has a very high population density based on the number of residential buildings within an area compared to other regions, one can assume that hospitals will cluster within the region.\nThe information highlights that there is an estimated KDE value to be less than 1 within a given area, as indicated by the low occurrence of yellow hotspots. This suggests that the distribution of hospitals is distributed in a manner that within a given area, a hospital will serve multiple planning subzones. This can potentally explain the long waiting time at hospitals due to the population size each hospital is serving.\nHowever, based on the visualisation model, the other regions do not exhibit a similarly high density of clusters of hospitals. Thus it could mean demand for health service within the region may be relatively lower, even when the population size is considerably high based on the number of residential buildings. Or, healthcare services within the region are more efficient and do not require more hospitals within the same area.\n\n\n\n\n\n\n\nFigure 14: KDE of Polyclinics\n\n\nLikewise for the interpretation of clustering of polyclinics, we cannot fully determine the number of hospitals within a given area as small number of polyclinics in Singapore. Hence we will too be relying on visual information to interpret the data.\nThe graph depicts that a rather even spread of yellow hotspots, suggesting that the distribution of polyclinics is generally good, with comparison with areas of higher population density denoted by residential buildings.\nBased on Figure 14, we can observe that the distribution of polyclinics shows a higher density / cluster of hospitals located within areas where there are residential buildings. If we observe the KDE model and density values, it indicates that there is a good distribution of yellow and pink gradients across areas of residential buildings. It suggests that MOH has actually carried out effective planning in distributing polyclinics around Singapore.\n\n\n\n\n\n\nFigure 15: KDE of Nursing Homes\n\n\nWe can discover that the distribution of nursing homes shows a higher density value / cluster of hospitals located within the Central region and Northeast region. This could possibly indicate there is higher demand for nursing homes within this area. However, due to Singapore’s small landsize and public transportation, we cannot dismiss that nursing homes could be located in these regions due to historical reasons, rent prices, availability of land and/or other reasons, especially when considering that users of nursing homes are typically elderly living in these facilities for long period of time.\n\n\n\nFigure 16: Locations of Nursing Homes\n\n\nBased on visualisation of nursing homes’ locations, the other regions do not exhibit a similarly high density value / clusters of nursing homes. But if we observe the geographical distribution for elderly aged 65 and above, it coincides with the area with higher values KDE distribution of nursing homes.\nElse, it could mean demand for health services within these regions are lower even when the population size is considerably high based on the number of residential buildings or that there are less elderly within these planning areas.\n\n\n\n\n\n\nFigure 17: KDE of PCN Clinics\n\n\nBased on Figure 17, we can observe that the distribution of PCN clinics shows an average cluster size / density value of 20-30 within certain regions, this means that within a given area there are approximately 20-30 PCN Clinics. It also suggests that the PCN Clinics are relatively well distributed in Singapore, with reference to the residential buildings that citizens live in.\n\n\n\n\n\n\nFigure 18: KDE of Eldercare Facilities\n\n\nBased on Figure 17, the distribution of eldercare facilities can be observed to depict an average cluster size / density value of around 1 to 3 within certain regions. It is uncertain the most suitable number of eldercare facilities within a given area, as it is also determined by the size of the facilities. Assuming that 1 to 3 eldercare service per region is acceptable at the moment, we can assume that this number will rise as the elderly population increases.\n\n\n\n\n\nIn conslusion, our observations indicate that the accessibility and spatial distribution of healthcare service in Singapore are generally well-distributed. Most areas with higher populations generally have better accessibility and distribution of healthcare services such as PCN clinics, CHAS clinics, Government Restructured and Community Hospitals, and eldercare services.\nThough there are only a couple of exceptions of regions which healthcare is less accessible, we urge relevant institutions like MOH to continue with their expansion of healthcare facilities in these under-served areas. This belief is supported by the fact that public housings are increasingly built in regions outside of central area (e.g., Punggol, Jurong East, Woodlands), and growing population, especially among elderly.\n\n\n\nIn Neutens [2015], it gives a detailed overview of accessibility, fairness, and healthcare, highlighting the importance of research from different fields [11]. This study emphasises the need for equal access and distribution in healthcare systems and explores various methods and challenges related to evaluating healthcare accessibility. While this review provides helpful information and forms a solid base for understanding healthcare accessibility, there are several key differences and similarities between Neutens [2015] and our project.\n\n\nFocus on healthcare accessibility: Both Neutens [2015] and our project mainly aim to evaluate healthcare services’ accessibility and distribution. We both understand the importance of these factors in creating fair healthcare systems and efficiently using medical resources.\n\n\n\nGeographical focus for Neutens [2015] provides a wider, global view of healthcare accessibility issues, while our project specifically targets Singapore’s healthcare system. This narrower focus helps us to analyse Singapore’s healthcare infrastructure and its unique challenges more closely.\n\n\n\nNeutens (2015) talks about general consequences of healthcare accessibility research for policy and planning. In contrast, our project specifically aims to offer insights and suggestions for Singapore’s policymakers and healthcare providers. By focusing on one country, our project can give more targeted advice for improving healthcare distribution and planning capbilities within Singapore.\n\n\n\n\nAs our classmates had similar projects, we spoke about the difficulty in procuring and cleaning the data, and putting the app up on RShiny. We did get good responses from our classmates, whose comments suggest that they too feel that this project is of use to a government who wants to address the problem of accessibility to healthcare services.\n\n\n\nTo expand on our work, researchers will benefits from including relevant data sets that would take into account various factors such as demand and supply of healthcare service, population size and residential information within each planning subzone, age range, and other socioeconomic factors to understand healthcare access better and people from various demographics groups.\nProviding information to these healthcare providers and policymakers so that they are able to utilise data to improve health services and to increase adoption of GIS analytics in health informatics in decision making.\nProviding a comparison with other countries to understand how Singapore’s healthcare system fares among other countries so as to compare the accessibility and distribution to other countries and regions. This way, we can effectively compare our healthcare system with countries that have a high reputation for their healthcare service such as Denmark, Norway and Switzerland.\nTo check on the accuracy of our results, comparing them to real-life data, like how patients actually travel to respective healthcare facilities that are being located, is needed. This assures that our findings are accurate to real world conditions\nBy making these changes, we think our group’s work will give a more complete and useful look at the accessibility and distribution of healthcare facilities in Singapore, helping everyone from policymakers to the general public.\n\n\n\nThe authors would like to express our gratitude to Professor Kam Tin Seong from SMU for his patience and guidance in advising us on this project. Moreover he had also provided us with valuable healthcare datasets for us to perform our geospatial analysis."
  },
  {
    "objectID": "posts/report/index.html#collection-of-data-methods",
    "href": "posts/report/index.html#collection-of-data-methods",
    "title": "Paper",
    "section": "Collection of Data Methods",
    "text": "Collection of Data Methods\n\nWe obtained address information and postal code of publicly available data on Acute and Community Hospitals, Eldercare and Nursing Homes, Primary Care Networks (PCN), and General Practitioners (GPs) services under the Community Health Assist Scheme (CHAS) from relevant governmental agencies and other websites."
  },
  {
    "objectID": "posts/report/index.html#preprocessing-data-methods",
    "href": "posts/report/index.html#preprocessing-data-methods",
    "title": "Paper",
    "section": "Preprocessing Data Methods",
    "text": "Preprocessing Data Methods\n\nWe use R studio to perform geocoding of the address and postal code using SLA API. Transform and convert the geospatial data point of locations of various healthcare facilities into a shapefile for usage in our R programming for geospatial analysis methods. We had to also do data scraping from web datatables and perform manual data cleaning for information that is incorrectly reflected as some of the organisations did not provide correct information."
  },
  {
    "objectID": "posts/report/index.html#r-methods-of-data-analysis",
    "href": "posts/report/index.html#r-methods-of-data-analysis",
    "title": "Paper",
    "section": "R Methods of Data Analysis",
    "text": "R Methods of Data Analysis\n\nWe used mainly two R methods to derive our geospatial analysis for analysing healthcare service in Singapore. First method we used was using the Kernel Density Estimation (KDE) - 1st Order Spatial Point Patterns Analysis Methods to evaluate the clustering patterns or distribution healthcare facilities in Singapore.\nSecond method we used was using the Geographical Modelling of Accessibility, visualising accessibility using Hansen, KD2SFCA and SAM Methods to measure the accessibility of healthcare services in Singapore\nHealthHub performing Geocoding using Addresses and Postal Codes Conversion to SHP Files - Government Restructured Hospitals (Healthhub) - Community and Rehabilitation Hospitals (Healthhub) - Polyclinics (Prof Kam) - Nursing Homes (Prof Kam) - Eldercare Facilities (Data.gov.sg)\nAgency of Integrated Care performing Geocoding using Addresses & Postal Codes Conversion to SHP Files - Primary Care Networks Clinics (PCN List) - Community Health Assist Scheme Clinics (AIC & CHAS)\nGeospatial and Aspatial Datasets - Data.gov.sg – Masterplan 2014 and 2019 Subzone No Sea PL - Data.gov.sg - CostalOutline - Singapore Department of Statistics (DOS) – Population Data PA-SZ-AGE - LTA DataMall – Bus Stop Location & Network\nOpen Street Map (OSM) - OSM Singapore Roads Networks - OSM Filtering Residential Buildings - Real-Centroids of residential buildings"
  },
  {
    "objectID": "posts/report/index.html#obtaining-singapore-buildings-using-real-centroid",
    "href": "posts/report/index.html#obtaining-singapore-buildings-using-real-centroid",
    "title": "Paper",
    "section": "Obtaining Singapore Buildings using Real-Centroid",
    "text": "Obtaining Singapore Buildings using Real-Centroid\n\nPublic and Private Residential Buildings shapefile > Extraction of Shapefile into R"
  },
  {
    "objectID": "posts/report/index.html#findings-of-geographical-accessibility-models",
    "href": "posts/report/index.html#findings-of-geographical-accessibility-models",
    "title": "Paper",
    "section": "Findings of Geographical Accessibility Models",
    "text": "Findings of Geographical Accessibility Models\n\nIn figure 2, We will use the URA Master Plan Subzone map provided by Urban redevelopment authority as our reference point for the description of geographical location within Singapore, so it will be easier for reader to understand which geographical location we are referring to.\n\nPopulation Size Largest - Central Region 2nd Largest - North-East and South-East Region 3rd Largest - South East Region 4th Largest - North West Region\nIn figure 3, it represents all the private and public residential buildings extracted from the OSM layer. We had applied real-centroid to extract out the centroids of all livable buildings in Singapore.\nThis will help us mathematically estimate and visually understand the demand within different geographical regions based on clusters of points of residents buildings within each region. Hence it will help us visually understand the geographical accessibility modelling of various regions within Singapore map. This would be effective in helping us understand how the density / cluster of KDE should be like for each given region within Singapore.\nIn the diagram we notice that the largest proportion of citizens live within the Central, followed by the North-East, South-East and South West region, due to the large clusters of data points overlapping one another on the map. Moreover a smaller group of people live close to the North-West region of singapore. This will help us get a general understanding of the demand and supply, distribution of health service and accessibility of healthcare within certain regions.\nWe would like to highlight that regions covered by forests have no healthcare facilities and it is important to exclude them when we are taking this into account when analysing our data for accessibility and distribution of healthcare services.\nACC Hansen Values According to the diagram, we analyse ACC Hansen values by their lower and upper limit if ACC Hansen values are from 0 (Lower Limit) to 1100 (Upper Limit). We also want to highlight that the ranges for ACC Hansen may vary depending on the healthcare facilities dataset being used. A faster way to look at the information is to view the colour distribution the darker the colour is a representation that the area has higher accessibility of the healthcare facilities Hansen value between 0 and 51 is considered low accessibility Hasen value between 52 and 200 is moderate accessibility Hasen values above 200 could be considered as good accessibility.\nAccessibility to Eldercare using the Hansen Method From the diagram we can observe that accessibility of eldercare facilities is largely within the central region of Singapore. The North-East, South-East and South-West Region are generally largely accessible for residents.\nAt the top of the North West Region, there is a lack of eldercare facilities, in which health policy makers could consider building more eldercare facilities in future national budgeting and planning. However the visualisation of the model suggests that eldercare are generally well distributed across Singapore.\nACC Hansen Values We would like to highlight that the range of ACC Hansen values may differ based on the healthcare facilities dataset being used. A quick way to interpret the information is to observe the colour distribution across the map, where the darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region Hansen value between 0 and 219 is considered low accessibility Hasen value between 220 and 1263 is moderate accessibility Hasen values above 1264 could be considered as good accessibility.\nPCN Clinics Accessibility using the Hansen Method From the diagram we can observe that accessibility of Primary Care Network (PCN) facilities are highly accessible within the Central, North-East and South-East Region region of Singapore, with reference to the dark purple colours within these regions. Additionally, the North West Region has acceptable range within the moderate accessibility of PCN Clinics for its residence.\nACC Hansen Values We would like to highlight that the range of ACC Hansen values may differ based on the healthcare facilities dataset being used. A quick way to interpret the information is to observe the colour distribution across the map, where the darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region Hansen value between 0 and 438 is considered low accessibility Hasen value between 439 and 2808 is moderate accessibility Hasen values above 2809 would be considered as good accessibility.\nAccessibility to CHAS Clinics using the Hansen Method From the diagram, it can be observed that accessibility of GP Clinics under CHAS are concentrated in the Central, North-East, and South-East regions of Singapore, as indicated by the dark purple colour within these areas. Additionally, the North West Region has acceptable range within the moderate accessibility of CHAS Clinics for its residence.\nACC Hansen Colour Gradient Interpretation Darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region\nAccessibility to Government Restructured Hospitals using the Hansen Method From the diagram, it can be observed that accessibility of Government Restructured Hospitals are largely accessible within the Central, North-East, South West regions of Singapore, as indicated by the dark blue colour within these areas. North West is in an acceptable range.\nMOH planning on upcoming hospitals However the South East Regions have significantly lower Government Restructured Hospitals which may not serve the residents living near the marine parade region. In future planning, the Ministry of Health (MOH) has announced that they will be building an Eastern Integrated Health Campus. Therefore, we believe that the accessibility for residents living in the South-East region will improve once it is built.\nACC Hansen Colour Gradient Interpretation Darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region\nAccessibility to Polyclinics using the Hansen Method From the diagram, it can be observed that accessibility of polyclinics is largely accessible within the Central, North-East, South West and East regions of Singapore, as indicated by the dark green colour within these areas.\nMOH planning on upcoming hospitals North West has lower accessibility. However in future planning, the Ministry of Health (MOH) has announced that they will be building Woodlands Health Campus. Therefore, we believe that the accessibility for residents living in the North-West region will improve once it is built.\nACC Hansen Colour Gradient Interpretation Darker colours indicate higher accessibility and light colour represent lower accessibility to healthcare facilities within a region\nAccessibility to Nursing Homes using the Hansen Method From the diagram, it can be observed that accessibility of polyclinics is largely accessible within all regions of Singapore, as indicated by the dark red colour within the region.\nOther methods of accessibility using Hansen, KD2SFCA and SAM Methods We would like to inform users that are only interpreting the accessibility for hansen method, as there are also other methods like KD2SFCA and SAM Methods. However their principles are relatively similar to the Hasen Methods of accessibility. If you would like to have more information please view the RShiny App at https://is415-group9.shinyapps.io/IS415-Group9/\nFindings of Kernel Density Estimation Models with URA Master Plan and Residential Buildings\nIn figure 1, We will use the URA Master Plan Subzone map provided by Urban redevelopment authority as our reference point for the description of geographical location within Singapore, so it will be easier for readers to understand which geographical location we are referring to.\nPopulation Size Largest - Central Region 2nd Largest - North-East and South-East Region 3rd Largest - South East Region 4th Largest - North West Region\nFigure 2, will help us mathematically estimate and visually understand the demand and supply of hospital facilities within different geographical regions based on clusters of points of residents buildings within each region. This would be effective in helping us understand how the density / cluster of KDE should be like for each given region within Singapore.\nIn the diagram we notice that the largest proportion of citizens live within the Central, followed by the North-East, South-East and South West region, due to the large clusters of data points overlapping one another on the map. Moreover a smaller group of people live close to the North-West region of singapore. This will help us get a general understanding of the demand and supply, distribution of health service and accessibility of healthcare within certain regions.\nWe would like to highlight that regions covered by forests have no healthcare facilities and it is important to exclude them when we are taking this into account when analysing our data for accessibility and distribution of healthcare services.\nPerforming Kernel Density Estimation (KDE) - First Order SPPA We are applying Kernel density estimation (KDE) to estimate the distribution of healthcare clusters and to understand the distribution and allocation of healthcare facilities within each geographical location. We will also be using two different methods of kernel density estimation. Bw.diggle based on nearest neighbour of between two or more data points Gaussian distribution were points are closer to the allocated centre point have greater weight as compare to data point which are further from the middle point\nWe would like to highlight that to interpret the Kernel Density Estimation visualisation, the representation of the KDE values typically ranges from 0 (Lower Limit) to 1 (Upper Limit), usually a positive value or could be higher values as the upper limit depending on the dataset being used in computation The higher the value the being closer to the upper limit, it will indicate that there is a higher density or cluster of healthcare facilities within the region The lower the value and being closer to the lower limit, it will indicate that there is a lower density or cluster of healthcare facilities within the region We can also determine based on the colour, e.g. if the colour is a brighter yellowish-pinkish it indicates that the density is higher and if the colour is dark blue it indicates there is a lower density Yellow = Indicating High Density / Clustering Pink = Indicating Medium Density / Clustering Dark Blue = Indicating Low Density / Clustering\nWe would like to highlight that when we are interpreting clustering of hospitals we cannot determine how many hospitals are within the area as the sample size of hospital is relatively small within a given area, hence we are primarily relying on visual information to interpret the data. As we cannot split the number of hospitals into values smaller than 1, it doesn’t make any logical sense.\nBased on Figure 3, We can observe that the distribution of Government Restructured Hospitals shows a higher density / cluster of hospitals located within the central region. This is technically correct as the central region has a very high population density based on the number of residential buildings within an area compared to other regions.\nThe information highlights that there is an estimated KDE value to be less than 1 within a given area, as indicated by the low occurrence of yellow hotspots. This suggests that the distribution of hospitals is distributed in a manner that within a given area, one hospital will serve multiple planning subzones. This could possibly explain the long waiting time at hospitals due to the population size each hospital is serving.\nHowever, based on the visualisation model the other region does not exhibit a similarly high density of clusters of hospitals. Hence it could mean demand for health service within the region is lower even when the population size is considerably high based on the number of residential buildings. Or healthcare services within the region are more efficient and do not require more hospitals within the same area.\nWe would like to highlight that to interpret the Kernel Density Estimation visualisation, the representation of the KDE values typically ranges from 0 (Lower Limit) to 1 (Upper Limit), usually a positive value or could be higher values as the upper limit depending on the dataset being used in computation The higher the value the being closer to the upper limit, it will indicate that there is a higher density or cluster of healthcare facilities within the region The lower the value and being closer to the lower limit, it will indicate that there is a lower density or cluster of healthcare facilities within the region We can also determine based on the colour, e.g. if the colour is a brighter yellowish-pinkish it indicates that the density is higher and if the colour is dark blue it indicates there is a lower density Yellow = Indicating High Density / Clustering Pink = Indicating Medium Density / Clustering Dark Blue = Indicating Low Density / Clustering\nWe would like to highlight that when we are interpreting clustering of polyclinics, we cannot determine how many hospitals are within the area as the sample size of polyclinics is relatively small within a given area, hence we are relying on visual information to interpret the data. As we cannot split the number of hospitals into values smaller than 1, it doesn’t make any logical sense.\nThe information highlights that there is an estimated KDE value to be less than 1 within a given area, as indicated by the yellow hotspots. This suggests that the distribution of polyclinics is generally good, with comparison with areas of higher population density denoted by residential buildings.\nBased on Figure 4, We can observe that the distribution of polyclinics shows a higher density / cluster of hospitals located within areas where there are residential buildings. If we observe the KDE Model and density values, it indicates that there is a good distribution of yellow and pink gradients across areas of residential buildings. In which, it suggests that MOH has actually carried out effective planning in distributing polyclinics around Singapore.\nYellow = Indicating High Density / Clustering Pink = Indicating Medium Density / Clustering Dark Blue = Indicating Low Density / Clustering\nBased on Figure 5, We can observe that the distribution of Nursing Homes shows a higher density value / cluster of hospitals located within the central region and north-east region. This indicates there is higher demand for nursing homes within this area.\nHowever based on the visualisation model the other region does not exhibit a similarly high density value / clusters of nursing homes. But if we observe the age distribution of elderly age 65 and above, it coincides with the area with higher values KDE distribution of nursing homes.\nElse it could mean demand for health services within these regions are lower even when the population size is considerably high based on the number of residential buildings or that there are less elderly within these planning areas.\nYellow = Indicating High Density / Clustering Pink = Indicating Medium Density / Clustering Dark Blue = Indicating Low Density / Clustering\nBased on Figure 6, We can observe that the distribution of Nursing Homes shows a density value / cluster of hospitals located within the central region and north-east region. This indicates there is higher demand for nursing homes within this area.\nConclusion\nReview and Critic on Past Works In Neutens (2015), the author gives a detailed overview of accessibility, fairness, and healthcare, highlighting the importance of research from different fields. This study emphasises the need for equal access and distribution in healthcare systems and explores various methods and challenges related to evaluating healthcare accessibility. While this review provides helpful information and forms a solid base for understanding healthcare accessibility, there are several key differences and similarities between Neutens (2015) and our project.\nSimilarities Focus on healthcare accessibility: Both Neutens (2015) and our project mainly aim to evaluate healthcare services’ accessibility and distribution. We both understand the importance of these factors in creating fair healthcare systems and efficiently using medical resources.\nDifferences Geographical focus: Neutens (2015) provides a wider, global view of healthcare accessibility issues, while our project specifically targets Singapore’s healthcare system. This narrower focus helps us to analyse Singapore’s healthcare infrastructure and its unique challenges more closely.\nApplication to policy and planning: Neutens (2015) talks about general consequences of healthcare accessibility research for policy and planning. In contrast, our project specifically aims to offer insights and suggestions for Singapore’s policymakers and healthcare providers. By focusing on one country, our project can give more targeted advice for improving healthcare distribution and planning abilities within Singapore.\nDiscussion As our classmates had similar projects we spoke about how hard it was to procure and clean the data and also put the app up on RShiny. We did get good responses from our classmates along the lines that they too feel that this project is of use to a government who wants to address the problem of accessibility to healthcare services.\nFuture Work Including relevant data sets that would take into account various factors such as demand and supply of healthcare service. Such as using population size within each planning subzone, age, and other socioeconomic factors to understand healthcare access better and people from various demographics groups.\nMethodological enhancements: We’ll take a look at the methods we used in our study and think about other ways that could give us more accurate or detailed results. We might try different spatial analysis methods, like the gravity model, network analysis, or the two-step floating catchment area method.\nComparative analysis: To get a better grasp of how Singapore’s healthcare system is doing, we’ll compare its accessibility and distribution to other countries or regions. This way, we can see where Singapore is awesome or needs to step up.\nIncorporation of user feedback: We’ll chat with important people like healthcare providers, policymakers, and patients to get their thoughts on the maps and visuals we created. This will make sure our work is helpful and makes sense for decision-making.\nValidation: We’ll double-check our results by comparing them to real-life data, like how patients actually use healthcare services or where new facilities are located. This will make sure our findings are solid and our suggestions are on point.\nBy making these changes, we think our group’s work will give a more complete and useful look at the distribution and accessibility of healthcare facilities in Singapore, helping everyone from policymakers to the general public.\nAcknowledgements The authors would like to express their gratitude to Prof Kam Tin Seong from SMU for his patience and guidance in advising us on this project. Moreover he had also provided us with valuable healthcare datasets for us to perform our geospatial analysis."
  },
  {
    "objectID": "posts/accessibility/index.html",
    "href": "posts/accessibility/index.html",
    "title": "Accessibility",
    "section": "",
    "text": "In this hands-on exercise, you will gain hands-on experience on how to model geographical accessibility by using R’s geospatial analysis packages.\n\n\nBy the end of this hands-on exercise, you will be able:\n\nto import GIS polygon data into R and save them as simple feature data frame by using appropriate functions of sf package of R;\nto import aspatial data into R and save them as simple feature data frame by using appropriate functions of sf package of R;\nto computer accessibility measure by using Hansen’s potential model and Spatial Accessibility Measure (SAM); and\nto visualise the accessibility measures by using tmap and ggplot2 packages.\n\n\n\n\n\nFour data sets will be used in this hands-on exercise, they are:\n\nMP14_SUBZONE_NO_SEA_PL: URA Master Plan 2014 subzone boundary GIS data. This data set is downloaded from data.gov.sg.\nhexagons: A 250m radius hexagons GIS data. This data set was created by using st_make_grid() of sf package. It is in ESRI shapefile format.\nELDERCARE: GIS data showing location of eldercare service. This data is downloaded from data.gov.sg. There are two versions. One in ESRI shapefile format. The other one in Google kml file format. For the purpose of this hands-on exercise, ESRI shapefile format is provided.\nOD_Matrix: a distance matrix in csv format. There are six fields in the data file. They are:\n\norigin_id: the unique id values of the origin (i.e. fid of hexagon data set.),\ndestination_id: the unique id values of the destination (i.e. fid of ELDERCARE data set.),\nentry_cost: the perpendicular distance between the origins and the nearest road),\nnetwork_cost: the actual network distance from the origin and destination,\nexit_cost: the perpendicular distance between the destination and the nearest road), and\ntotal_cost: the summation of entry_cost, network_cost and exit_cost.\n\n\nAll the values of the cost related fields are in metres.\nReminder: Except MP14_SUBZONE_NO_SEA_PL data set, the other three data set are specially prepared by Prof. Kam for teaching and research purpose. Students taking IS415 Geospatial Analytics and Applications are allowed to use them for hands-on exercise purpose. Please obtain formal approval from Prof. Kam if you want to use them for other courses or usage.\n\n\n\nBefore we getting started, it is important for us to install the necessary R packages and launch them into RStudio environment.\nThe R packages need for this exercise are as follows:\n\nSpatial data handling\n\nsf\n\nModelling geographical accessibility\n\nspatialAcc\n\nAttribute data handling\n\ntidyverse, especially readr and dplyr\n\nthematic mapping\n\ntmap\n\nStaistical graphic\n\nggplot2\n\nStatistical analysis\n\nggstatsplot\n\n\nThe code chunk below installs and launches these R packages into RStudio environment.\n\npacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse, RColorBrewer)\n\nNotice that with tidyverse, we do not have to install readr, dplyr and ggplots packages separately. In fact, tidyverse also installs other R packages such as tidyr, stringr, forcats, tibble, purrr and magrittr.\n\n\n\n\n\nThree geospatial data will be imported from the data/geospatial sub-folder. They are MP14_SUBZONE_NO_SEA_PL, hexagons and ELDERCARE.\nThe code chunk below is used to import these three data sets shapefile by using st_read() of sf packages.\nImporting Master Plan Subzone 2014 No Sea PL\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nImporting Hexagons\n\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") \n\nReading layer `hexagons' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `hexagons' from data source `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nImporting Hexagons_2019\n\nhexagons_2019 <- st_read(dsn = \"data/geospatial/Hexagon 2019 Shapefile\", \n                         layer = \"Hexagon_2019\") \n\nReading layer `Hexagon_2019' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\Hexagon 2019 Shapefile' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4125 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.575 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `Hexagon_2019' from data source \n  `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\Hexagon 2019 Shapefile' using driver `ESRI Shapefile'\nSimple feature collection with 4125 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.575 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nImporting Eldercare Dataset\n\neldercare <- st_read(dsn = \"data/geospatial/eldercare Shapefile\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\eldercare Shapefile' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `ELDERCARE' from data source `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\nImporting PCN Clinics Dataset - Conversion into Geospatial format using QGIS\n\nPCN_Clinics <- st_read(dsn = \"data/geospatial/PCN Network Clinics Shapefile\", \n                       layer = \"PCN Network Clinics\") \n\nReading layer `PCN Network Clinics' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\PCN Network Clinics Shapefile' \n  using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 828 features and 20 fields (with 1 geometry empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4985.536 ymin: 26424.19 xmax: 45002.49 ymax: 48986.95\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `PCN Network Clinics' from data source \n  `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\PCN Network Clinics Shapefile' using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 828 features and 20 fields (with 1 geometry empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4985.536 ymin: 26424.19 xmax: 45002.49 ymax: 48986.95\nProjected CRS: SVY21 / Singapore TM\nImporting CHAS_Clinics Dataset - Conversion into Geospatial format using QGIS\n\nCHAS_Clinics <- st_read(dsn = \"data/geospatial/CHAS Clinics Shapefile\", \n                       layer = \"CHAS Clinics\") \n\nReading layer `CHAS Clinics' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\CHAS Clinics Shapefile' \n  using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 1917 features and 19 fields (with 5 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4985.536 ymin: 26424.19 xmax: 45457.14 ymax: 48626.7\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `CHAS Clinics' from data source \n  `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\CHAS Clinics Shapefile' using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 1917 features and 19 fields (with 5 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4985.536 ymin: 26424.19 xmax: 45457.14 ymax: 48626.7\nProjected CRS: SVY21 / Singapore TM\nImporting Hospital Dataset - Conversion into Geospatial format using QGIS\n\nHospital <- st_read(dsn = \"data/geospatial/Hospital Shapefile\", \n                       layer = \"Hospital\")\n\nReading layer `Hospital' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\Hospital Shapefile' \n  using driver `ESRI Shapefile'\nSimple feature collection with 27 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17857.55 ymin: 29122.03 xmax: 40851.78 ymax: 45093.16\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `Hospital' from data source `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\Hospital Shapefile' using driver `ESRI Shapefile'\nSimple feature collection with 27 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17857.55 ymin: 29122.03 xmax: 40851.78 ymax: 45093.16\nProjected CRS: SVY21 / Singapore TM\nImporting Polyclinics Dataset - Conversion into Geospatial format using QGIS\n\nPolyclinics <- st_read(dsn = \"data/geospatial/Polyclinics Shapefile\", \n                       layer = \"Polyclinics\") \n\nReading layer `Polyclinics' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\Polyclinics Shapefile' \n  using driver `ESRI Shapefile'\nSimple feature collection with 22 features and 9 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13049.46 ymin: 29117.43 xmax: 42034.52 ymax: 45848.17\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `Polyclinics' from data source `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\Polyclinics Shapefile' using driver `ESRI Shapefile'\nSimple feature collection with 22 features and 9 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13049.46 ymin: 29117.43 xmax: 42034.52 ymax: 45848.17\nProjected CRS: SVY21 / Singapore TM\nImporting Nursing Homes Dataset - Conversion into Geospatial format using QGIS\n\nNursing_Homes <- st_read(dsn = \"data/geospatial/Nursing Homes Shapefile\", \n                       layer = \"Nursing Homes\")\n\nReading layer `Nursing Homes' from data source \n  `C:\\deadline2359\\IS415-Project\\posts\\accessibility\\data\\geospatial\\Nursing Homes Shapefile' \n  using driver `ESRI Shapefile'\nSimple feature collection with 76 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12215.86 ymin: 28170.14 xmax: 44538.57 ymax: 47531.11\nProjected CRS: SVY21 / Singapore TM\n\n\nReading layer `Nursing Homes' from data source \n  `C:\\TWeishing\\IS415-GAA\\05-Group_Project\\data\\geospatial\\Nursing Homes Shapefile' using driver `ESRI Shapefile'\nSimple feature collection with 76 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12215.86 ymin: 28170.14 xmax: 44538.57 ymax: 47531.11\nProjected CRS: SVY21 / Singapore TM\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\n\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\n\nmpsz <- st_transform(mpsz, 3414)\nhexagons <- st_transform(hexagons, 3414)\nhexagons_2019 <- st_transform(hexagons_2019, 3414)\n\neldercare <- st_transform(eldercare, 3414)\nPCN_Clinics <- st_transform(PCN_Clinics, 3414)\nCHAS_Clinics <- st_transform(CHAS_Clinics, 3414)\nHospital <- st_transform(Hospital, 3414)\nPolyclinics <- st_transform(Polyclinics, 3414)\nNursing_Homes <- st_transform(Nursing_Homes, 3414)\n\nAfter transforming the projection metadata, you can verify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to varify the newly transformed mpsz_svy21.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\nNotice that the EPSG: is indicated as 3414 now.\n\nst_crs(hexagons)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\nNotice that the EPSG: is indicated as 3414 now.\n\n\n\nThere are many redundant fields in the data tables of both eldercare and hexagons. The code chunks below will be used to exclude those redundant fields. At the same time, a new field called demand and a new field called capacity will be added into the data table of hexagons and eldercare sf data frame respectively. Both fields are derive using mutate() of dplyr package.\nEldercare\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\nPCN_Clinics\n\nPCN_Clinics <- PCN_Clinics %>%\n  select(fid, results.PO) %>%\n  mutate(capacity = 100)\n\nCHAS_Clinics\n\nCHAS_Clinics <- CHAS_Clinics %>%\n  select(fid, results.PO) %>%\n  mutate(capacity = 100)\n\nHospital\n\nHospital <- Hospital %>%\n  select(fid, Postal.Cod) %>%\n  mutate(capacity = 100)\n\nPolyclinics\n\nPolyclinics <- Polyclinics %>%\n  select(fid, Postal.Cod) %>%\n  mutate(capacity = 100)\n\nNursing_Homes\n\nNursing_Homes <- Nursing_Homes %>%\n  select(fid, POSTAL_COD) %>%\n  mutate(capacity = 100)\n\nHexagon 2014\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\nHexagon 2019\n\nhexagons_2019 <- hexagons_2019 %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\nNotice that for the purpose of this hands-on exercise, a constant value of 100 is used. In practice, actual demand of the hexagon and capacity of the eldercare centre should be used.\n\n\n\n\n\n\nThe code chunk below uses read_cvs() of readr package to import OD_Matrix.csv into RStudio. The imported object is a tibble data.frame called ODMatrix.\nEldercare OD Matrix\n\nODMatrix_eldercare <- read_csv(\"data/aspatial/Hands-On Ex10 OD Matrix/OD_Matrix.csv\", skip = 0)\n\nRows: 375000 Columns: 6── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nPCN Clinics OD Matrix\n\nODMatrix_PCN_Clinic <- read_csv(\"data/aspatial/PCN Clinics OD Matrix/Output OD Matrix PCN Clinics 2.csv\", skip = 0)\n\nRows: 3415500 Columns: 6── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nCHAS Clinics OD Matrix\n\nODMatrix_CHAS_Clinic <- read_csv(\"data/aspatial/CHAS Clinics OD Matrix/CHAS Clinic OD Matrix.csv\", skip = 0)\n\nRows: 7907625 Columns: 6── Column specification ──────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nHospital OD Matrix\n\nODMatrix_Hospital <- read_csv(\"data/aspatial/Hospital OD Matrix/Hospitals OD Matrix.csv\", skip = 0)\n\nRows: 111375 Columns: 6── Column specification ──────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nPolyclinics OD Matrix\n\nODMatrix_Polyclinics <- read_csv(\"data/aspatial/Polyclinics OD Matrix/Polyclinics OD Matrix.csv\", skip = 0)\n\nRows: 90750 Columns: 6── Column specification ──────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nNursing_Homes OD Matrix\n\nODMatrix_Nursing_Homes <- read_csv(\"data/aspatial/Nursing Homes OD Matrix/Nursing Homes OD Matrix.csv\", skip = 0)\n\nRows: 313500 Columns: 6── Column specification ──────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, total_cost\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nThe imported OD Matrix organised the distance matrix column wise.\nEldercare OD Matrix\n\n\nPCN Network Clinics OD Matrix \nOn the other hands, most of the modelling packages in R is expecting a matrix look similar to the figure below.\nEldercare\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format.\n\ndistmat_eldercare <- ODMatrix_eldercare %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nPCN Clinics\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format.\n\ndistmat_PCN_Clinics <- ODMatrix_PCN_Clinic %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nCHAS_Clinics\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format\n\ndistmat_CHAS_Clinics <- ODMatrix_CHAS_Clinic %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nHospitals\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format\n\ndistmat_Hospitals <- ODMatrix_Hospital %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nPolyclinics\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format\n\ndistmat_Polyclinics <- ODMatrix_Polyclinics %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nNursing_Homes\nThe rows represent origins (i.e. also know as from field) and the columns represent destination (i.e. also known as to field.)\nThe code chunk below uses spread() of tidyr package is used to transform the O-D matrix from a thin format into a fat format\n\ndistmat_Nursing_Homes <- ODMatrix_Nursing_Homes %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\nNote: Since tidyr version 1.0 a new function called pivot_wider() is introduce. You should use pivot_wider() instead of spread()\nCurrently, the distance is measured in metre because SVY21 projected coordinate system is used. The code chunk below will be used to convert the unit f measurement from metre to kilometre.\nEldercare convert to km, such that it is easier to observe values\n\ndistmat_eldercare_km <- as.matrix(distmat_eldercare/1000)\n\nPCN Clinics convert to km, such that it is easier to observe values\n\ndistmat_PCN_Clinics_km <- as.matrix(distmat_PCN_Clinics/1000)\n\nCHAS_Clinics convert to km, such that it is easier to observe values\n\ndistmat_CHAS_Clinics_km <- as.matrix(distmat_CHAS_Clinics/1000)\n\nHospitals convert to km, such that it is easier to observe values\n\ndistmat_Hospitals_km <- as.matrix(distmat_Hospitals/1000)\n\nPolyclinics convert to km, such that it is easier to observe values\n\ndistmat_Polyclinics_km <- as.matrix(distmat_Polyclinics/1000)\n\nNursing_Homes convert to km, such that it is easier to observe values\n\ndistmat_Nursing_Homes_km <- as.matrix(distmat_Nursing_Homes/1000)\n\n\n\n\n\n\n\nNow, we ready to compute Hansen’s accessibility by using ac() of SpatialAcc package. Before getting started, you are encourage to read the arguments of the function at least once in order to ensure that the required inputs are available.\nThe code chunk below calculates Hansen’s accessibility using ac() of SpatialAcc and data.frame() is used to save the output in a data frame called acc_Handsen.\nEldercare\n\nacc_eldercare_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_eldercare_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nPCN Clinics\n\nacc_PCN_Clinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            PCN_Clinics$capacity,\n                            distmat_PCN_Clinics_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nCHAS_Clinics\n\nacc_CHAS_Clinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            CHAS_Clinics$capacity,\n                            distmat_CHAS_Clinics_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nHospitals\n\nacc_Hospitals_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Hospital$capacity,\n                            distmat_Hospitals_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nPolyclinics\n\nacc_Polyclinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Polyclinics$capacity,\n                            distmat_Polyclinics_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nNursing_Homes\n\nacc_Nursing_Homes_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Nursing_Homes$capacity,\n                            distmat_Nursing_Homes_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nNotice that for the purpose of this hands-on exercise, a constant value of 100 is used. In practice, actual demand of the hexagon and capacity of the eldercare centre should be used.\nAcc_eldercare_Hansen\nThe default field name is very messy, we will rename it to accHansen by using the code chunk below.\n\nAcc_PCN_Clinics_Hansen\nThe default field name is very messy, we will rename it to accHansen by using the code chunk below.\n\nEldercare\n\ncolnames(acc_eldercare_Hansen) <- \"accHansen\"\n\n Notice that the field name is much more tidier now.\nPCN Clinics\n\ncolnames(acc_PCN_Clinics_Hansen) <- \"accHansen\"\n\n\nCHAS_Clinics\n\ncolnames(acc_CHAS_Clinics_Hansen) <- \"accHansen\"\n\nHospitals\n\ncolnames(acc_Hospitals_Hansen) <- \"accHansen\"\n\nPolyclinics\n\ncolnames(acc_Polyclinics_Hansen) <- \"accHansen\"\n\nNursing_Homes\n\ncolnames(acc_Nursing_Homes_Hansen) <- \"accHansen\"\n\nNotice that the field name is much more tidier now. Next, we will convert the data table into tibble format by using the code chunk below.\nEldercare\n\nacc_eldercare_Hansen <- tbl_df(acc_eldercare_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPCN Clinics\n\nacc_PCN_Clinics_Hansen <- tbl_df(acc_PCN_Clinics_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nCHAS_Clinics\n\nacc_CHAS_Clinics_Hansen <- tbl_df(acc_CHAS_Clinics_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nHospitals\n\nacc_Hospitals_Hansen <- tbl_df(acc_Hospitals_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPolyclinics\n\nacc_Polyclinics_Hansen <- tbl_df(acc_Polyclinics_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nNursing_Homes\n\nacc_Nursing_Homes_Hansen <- tbl_df(acc_Nursing_Homes_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nLastly, bind_cols() of dplyr will be used to join the acc_Hansen tibble data frame with the hexagons simple feature data frame. The output is called hexagon_Hansen.\nEldercare Hexagons\n\nhexagon_eldercare_Hansen <- bind_cols(hexagons, acc_eldercare_Hansen)\n\n\nNotice that hexagon_Hansen is a simple feature data frame and not a typical tibble data frame.\nPCN Clinics Hexagons\n\nhexagon_PCN_Clinics_Hansen <- bind_cols(hexagons_2019, acc_PCN_Clinics_Hansen)\n\n\nNotice that hexagon_Hansen is a simple feature data frame and not a typical tibble data frame.\nCHAS_Clinics Hexagons\n\nhexagon_CHAS_Clinics_Hansen <- bind_cols(hexagons_2019, acc_CHAS_Clinics_Hansen)\n\nHospitals Hexagons\n\nhexagon_Hospitals_Hansen <- bind_cols(hexagons_2019, acc_Hospitals_Hansen)\n\nPolyclinics Hexagons\n\nhexagon_Polyclinics_Hansen <- bind_cols(hexagons_2019, acc_Polyclinics_Hansen)\n\nNursing_Homes Hexagons\n\nhexagon_Nursing_Homes_Hansen <- bind_cols(hexagons_2019, acc_Nursing_Homes_Hansen)\n\nNotice that hexagon_Hansen is a simple feature data frame and not a typical tibble data frame.\nActually, the steps above can be perform by using a single code chunk as shown below.\nEldercare ACC Hansen\n\nacc_eldercare_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_eldercare_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_eldercare_Hansen) <- \"accHansen\"\nacc_eldercare_Hansen <- tbl_df(acc_eldercare_Hansen)\nhexagon_eldercare_Hansen <- bind_cols(hexagons, acc_eldercare_Hansen)\n\nPCN Clinics ACC Hansen\n\nacc_PCN_Clinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            PCN_Clinics$capacity,\n                            distmat_PCN_Clinics_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_PCN_Clinics_Hansen) <- \"accHansen\"\nacc_PCN_Clinics_Hansen <- tbl_df(acc_PCN_Clinics_Hansen)\nhexagon_PCN_Clinics_Hansen <- bind_cols(hexagons_2019, acc_PCN_Clinics_Hansen)\n\nCHAS_Clinics ACC Hansen\n\nacc_CHAS_Clinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            CHAS_Clinics$capacity,\n                            distmat_CHAS_Clinics_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_CHAS_Clinics_Hansen) <- \"accHansen\"\nacc_CHAS_Clinics_Hansen <- tbl_df(acc_CHAS_Clinics_Hansen)\nhexagon_CHAS_Clinics_Hansen <- bind_cols(hexagons_2019, acc_CHAS_Clinics_Hansen)\n\nHospitals ACC Hansen\n\nacc_Hospitals_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Hospital$capacity,\n                            distmat_Hospitals_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hospitals_Hansen) <- \"accHansen\"\nacc_Hospitals_Hansen <- tbl_df(acc_Hospitals_Hansen)\nhexagon_Hospitals_Hansen <- bind_cols(hexagons_2019, acc_Hospitals_Hansen)\n\nPolyclinics ACC Hansen\n\nacc_Polyclinics_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Polyclinics$capacity,\n                            distmat_Polyclinics_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Polyclinics_Hansen) <- \"accHansen\"\nacc_Polyclinics_Hansen <- tbl_df(acc_Polyclinics_Hansen)\nhexagon_Polyclinics_Hansen <- bind_cols(hexagons_2019, acc_Polyclinics_Hansen)\n\nNursing_Homes\n\nacc_Nursing_Homes_Hansen <- data.frame(ac(hexagons_2019$demand,\n                            Nursing_Homes$capacity,\n                            distmat_Nursing_Homes_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Nursing_Homes_Hansen) <- \"accHansen\"\nacc_Nursing_Homes_Hansen <- tbl_df(acc_Nursing_Homes_Hansen)\nhexagon_Nursing_Homes_Hansen <- bind_cols(hexagons_2019, acc_Nursing_Homes_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\n\n\n\n\n\nFirstly, we will extract the extend of hexagons simple feature data frame by by using st_bbox() of sf package.\nHexagon using Masterplan 2014\n\nmapex <- st_bbox(hexagons)\n\nHexagon using Masterplan 2019\n\nmapex_2019 <- st_bbox(hexagons_2019)\n\nThe code chunk below uses a collection of mapping fucntions of tmap package to create a high cartographic quality accessibility to eldercare centre in Singapore.\nEldercare Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_eldercare_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nPCN Clinics Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_PCN_Clinics_Hansen,\n         bbox = mapex_2019) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Purples\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(PCN_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to PCN_Clinics: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nCHAS_Clinics Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_CHAS_Clinics_Hansen,\n         bbox = mapex_2019) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Purples\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(CHAS_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to CHAS_Clinics: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nHospitals Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hospitals_Hansen,\n         bbox = mapex_2019) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Hospital) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Hospitals: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nPolyclinics Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Polyclinics_Hansen,\n         bbox = mapex_2019) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Greens\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Polyclinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Polyclinics: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nNursing_Homes Accessibility Map Plot\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Nursing_Homes_Hansen,\n         bbox = mapex_2019) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Reds\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Nursing_Homes) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Nursing_Homes: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\n\n\nIn this section, we are going to compare the distribution of Hansen’s accessibility values by URA Planning Region.\nFirstly, we need to add the planning region field into haxegon_Hansen simple feature data frame by using the code chunk below.\nEldercare\n\nhexagon_eldercare_Hansen <- st_join(hexagon_eldercare_Hansen, mpsz, \n                          join = st_intersects)\n\nPCN Clinics\n\nhexagon_PCN_Clinics_Hansen <- st_join(hexagon_PCN_Clinics_Hansen, mpsz, \n                              join = st_intersects)\n\nCHAS Clinics\n\nhexagon_CHAS_Clinics_Hansen <- st_join(hexagon_CHAS_Clinics_Hansen, mpsz, \n                               join = st_intersects)\n\nHospitals\n\nhexagon_Hospitals_Hansen <- st_join(hexagon_Hospitals_Hansen, mpsz, \n                            join = st_intersects)\n\nPolyclinics\n\nhexagon_Polyclinics_Hansen <- st_join(hexagon_Polyclinics_Hansen, mpsz, \n                              join = st_intersects)\n\nNursing_Homes\n\nhexagon_Nursing_Homes_Hansen <- st_join(hexagon_Nursing_Homes_Hansen, mpsz, \n                              join = st_intersects)\n\nEldercare\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data = hexagon_eldercare_Hansen, \n       aes(y = log(accHansen), \n           x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun.y = \"mean\", \n             colour = \"red\", \n             size=2)\n\n\n\n\n\nPCN Clinics\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data = hexagon_PCN_Clinics_Hansen, \n       aes(y = log(accHansen), \n           x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun.y = \"mean\", \n             colour = \"red\", \n             size=2)\n\n\n\n\n\nCHAS Clinics\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data = hexagon_CHAS_Clinics_Hansen, \n       aes(y = log(accHansen), \n           x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun.y = \"mean\", \n             colour = \"red\", \n             size=2)\n\n\n\n\n\nHospitals\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data = hexagon_Hospitals_Hansen, \n       aes(y = log(accHansen), \n           x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun.y = \"mean\", \n             colour = \"red\", \n             size=2)\n\n\n\n\n\nPolyclinics\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data=hexagon_Polyclinics_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)\n\n\n\n\n\nNursing_Homes\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method.\n\nggplot(data=hexagon_Nursing_Homes_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)\n\n\n\n\n\n\n\n\n\n\n\nIn this section, you are going to repeat most of the steps you had learned in previous section to perform the analysis. However, some of the codes will be combined into one code chunk.\nThe code chunk below calculates Hansen’s accessibility using ac() of SpatialAcc and data.frame() is used to save the output in a data frame called acc_KD2SFCA. Notice that KD2SFCA is used for family argument.\nEldercare\n\nacc_eldercare_KD2SFCA <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_eldercare_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_eldercare_KD2SFCA) <- \"accKD2SFCA_eldercare\"\nacc_eldercare_KD2SFCA <- tbl_df(acc_eldercare_KD2SFCA)\nhexagon_eldercare_KD2SFCA <- bind_cols(hexagons, acc_eldercare_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPCN_Clinics\n\nacc_PCN_Clinics_KD2SFCA <- data.frame(ac(hexagons_2019$demand,\n                            PCN_Clinics$capacity,\n                            distmat_PCN_Clinics_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_PCN_Clinics_KD2SFCA) <- \"accKD2SFCA_PCN_Clinics\"\nacc_PCN_Clinics_KD2SFCA <- tbl_df(acc_PCN_Clinics_KD2SFCA)\nhexagon_PCN_Clinics_KD2SFCA <- bind_cols(hexagons_2019, acc_PCN_Clinics_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nCHAS_Clinics\n\nacc_CHAS_Clinics_KD2SFCA <- data.frame(ac(hexagons_2019$demand,\n                            CHAS_Clinics$capacity,\n                            distmat_CHAS_Clinics_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_CHAS_Clinics_KD2SFCA) <- \"accKD2SFCA_CHAS_Clinics\"\nacc_CHAS_Clinics_KD2SFCA <- tbl_df(acc_CHAS_Clinics_KD2SFCA)\nhexagon_CHAS_Clinics_KD2SFCA <- bind_cols(hexagons_2019, acc_CHAS_Clinics_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nHospitals\n\nacc_Hospitals_KD2SFCA <- data.frame(ac(hexagons_2019$demand,\n                            Hospital$capacity,\n                            distmat_Hospitals_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_Hospitals_KD2SFCA) <- \"accKD2SFCA_Hospitals\"\nacc_Hospitals_KD2SFCA <- tbl_df(acc_Hospitals_KD2SFCA)\nhexagon_Hospitals_KD2SFCA <- bind_cols(hexagons_2019, acc_Hospitals_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPolyclinics\n\nacc_Polyclinics_KD2SFCA <- data.frame(ac(hexagons_2019$demand,\n                            Polyclinics$capacity,\n                            distmat_Polyclinics_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_Polyclinics_KD2SFCA) <- \"accKD2SFCA_Polyclinics\"\nacc_Polyclinics_KD2SFCA <- tbl_df(acc_Polyclinics_KD2SFCA)\nhexagon_Polyclinics_KD2SFCA <- bind_cols(hexagons_2019, acc_Polyclinics_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nNursing_Homes\n\nacc_Nursing_Homes_KD2SFCA <- data.frame(ac(hexagons_2019$demand,\n                            Nursing_Homes$capacity,\n                            distmat_Nursing_Homes_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_Nursing_Homes_KD2SFCA) <- \"accKD2SFCA_Nursing_Homes\"\nacc_Nursing_Homes_KD2SFCA <- tbl_df(acc_Nursing_Homes_KD2SFCA)\nhexagon_Nursing_Homes_KD2SFCA <- bind_cols(hexagons_2019, \n                                           acc_Nursing_Homes_KD2SFCA)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\n\n\n\nThe code chunk below uses a collection of mapping fucntions of tmap package to create a high cartographic quality accessibility to eldercare centre in Singapore. Notice that mapex is reused for bbox argument.\neldercare\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_eldercare_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_eldercare\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to eldercare: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nPCN_Clinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_PCN_Clinics_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_PCN_Clinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(PCN_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to PCN_Clinics: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nCHAS_Clinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_CHAS_Clinics_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_CHAS_Clinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Purples\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(CHAS_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to CHAS_Clinics: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nHospitals\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hospitals_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_Hospitals\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Greens\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Hospital) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Hospitals: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nPolyclinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Polyclinics_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_Polyclinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Polyclinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Polyclinics: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nNursing_Homes\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Nursing_Homes_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA_Nursing_Homes\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Reds\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Nursing_Homes) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Nursing_Homes: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\n\nIn this section, we are going to compare the distribution of Hansen’s accessibility values by URA Planning Region.\nFirstly, we need to add the planning region field into haxegon_Hansen simple feature data frame by using the code chunk below.\neldercare\n\nhexagon_eldercare_Hansen <- st_join(hexagon_eldercare_Hansen, mpsz, \n                          join = st_intersects)\n\nPCN_Clinics\n\nhexagon_PCN_Clinics_Hansen <- st_join(hexagon_PCN_Clinics_Hansen, mpsz, \n                          join = st_intersects)\n\nCHAS_Clinics\n\nhexagon_CHAS_Clinics_Hansen <- st_join(hexagon_CHAS_Clinics_Hansen, mpsz, \n                          join = st_intersects)\n\nHospitals\n\nhexagon_Hospitals_Hansen <- st_join(hexagon_Hospitals_Hansen, mpsz, \n                          join = st_intersects)\n\nPolyclinics\n\nhexagon_Polyclinics_Hansen <- st_join(hexagon_Polyclinics_Hansen, mpsz, \n                          join = st_intersects)\n\nNursing_Homes\n\nhexagon_Nursing_Homes_Hansen <- st_join(hexagon_Nursing_Homes_Hansen, mpsz, \n                          join = st_intersects)\n\nNext, ggplot() will be used to plot the distribution by using boxplot graphical method\neldercare\n\n# ggplot(data=hexagon_eldercare_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\nPCN_Clinics\n\n# ggplot(data=hexagon_PCN_Clinics_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\nCHAS_Clinics\n\n# ggplot(data=hexagon_CHAS_Clinics_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\nHospitals\n\n# ggplot(data=hexagon_Hospitals_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\nPolyclinics\n\n# ggplot(data=hexagon_Polyclinics_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\nNursing_Homes\n\n# ggplot(data=hexagon_Nursing_Homes_KD2SFCA, \n#        aes(y = accKD2SFCA, \n#            x= REGION_N)) +\n#   geom_boxplot(acc) +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n\n\n\n\n\n\n\nIn this section, you are going to repeat most of the steps you had learned in previous section to perform the analysis. However, some of the codes will be combined into one code chunk.\nThe code chunk below calculates Hansen’s accessibility using ac() of SpatialAcc and data.frame() is used to save the output in a data frame called acc_SAM. Notice that SAM is used for family argument.\neldercare\n\nacc_eldercare_SAM <- data.frame(ac(hexagons$demand,\n                         eldercare$capacity,\n                         distmat_eldercare_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_eldercare_SAM) <- \"accSAM_eldercare\"\nacc_eldercare_SAM <- tbl_df(acc_eldercare_SAM)\nhexagon_eldercare_SAM <- bind_cols(hexagons, acc_eldercare_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPCN_Clinics\n\nacc_PCN_Clinics_SAM <- data.frame(ac(hexagons_2019$demand,\n                         PCN_Clinics$capacity,\n                         distmat_PCN_Clinics_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_PCN_Clinics_SAM) <- \"accSAM_PCN_Clinics\"\nacc_PCN_Clinics_SAM <- tbl_df(acc_PCN_Clinics_SAM)\nhexagon_PCN_Clinics_SAM <- bind_cols(hexagons_2019, acc_PCN_Clinics_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nCHAS_Clinics\n\nacc_CHAS_Clinics_SAM <- data.frame(ac(hexagons_2019$demand,\n                         CHAS_Clinics$capacity,\n                         distmat_CHAS_Clinics_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_CHAS_Clinics_SAM) <- \"accSAM_CHAS_Clinics\"\nacc_CHAS_Clinics_SAM <- tbl_df(acc_CHAS_Clinics_SAM)\nhexagon_CHAS_Clinics_SAM <- bind_cols(hexagons_2019, acc_CHAS_Clinics_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nHospitals\n\nacc_Hospitals_SAM <- data.frame(ac(hexagons_2019$demand,\n                         Hospital$capacity,\n                         distmat_Hospitals_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_Hospitals_SAM) <- \"accSAM_Hospitals\"\nacc_Hospitals_SAM <- tbl_df(acc_Hospitals_SAM)\nhexagon_Hospitals_SAM <- bind_cols(hexagons_2019, acc_Hospitals_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nPolyclinics\n\nacc_Polyclinics_SAM <- data.frame(ac(hexagons_2019$demand,\n                         Polyclinics$capacity,\n                         distmat_Polyclinics_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_Polyclinics_SAM) <- \"accSAM_Polyclinics\"\nacc_Polyclinics_SAM <- tbl_df(acc_Polyclinics_SAM)\nhexagon_Polyclinics_SAM <- bind_cols(hexagons_2019, acc_Polyclinics_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\nNursing_Homes\n\nacc_Nursing_Homes_SAM <- data.frame(ac(hexagons_2019$demand,\n                         Nursing_Homes$capacity,\n                         distmat_Nursing_Homes_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_Nursing_Homes_SAM) <- \"accSAM_Nursing_Homes\"\nacc_Nursing_Homes_SAM <- tbl_df(acc_Nursing_Homes_SAM)\nhexagon_Nursing_Homes_SAM <- bind_cols(hexagons_2019, acc_Nursing_Homes_SAM)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nPlease use `tibble::as_tibble()` instead.\n\n\n\nThe code chunk below uses a collection of mapping fucntions of tmap package to create a high cartographic quality accessibility to eldercare centre in Singapore. Notice that mapex is reused for bbox argument.\neldercare\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_eldercare_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_eldercare\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to eldercare: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nPCN_Clinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_PCN_Clinics_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_PCN_Clinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(PCN_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to PCN_Clinics: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nCHAS_Clinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_CHAS_Clinics_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_CHAS_Clinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Purples\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(CHAS_Clinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to CHAS_Clinics: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nHospitals\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hospitals_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_Hospitals\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Greens\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Hospital) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Hospitals: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nPolyclinics\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Polyclinics_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_Polyclinics\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Polyclinics) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Polyclinics: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\nNursing_Homes\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Nursing_Homes_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM_Nursing_Homes\",\n          n = 10,\n          style = \"quantile\",\n          palette = \"Reds\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(Nursing_Homes) +\n  tm_symbols(size = 0.01) +\n  tm_layout(main.title = \"Accessibility to Nursing_Homes: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1.5,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  }
]